[{"D:\\D\\Freelance\\tunnin-web\\src\\index.js":"1","D:\\D\\Freelance\\tunnin-web\\src\\reportWebVitals.js":"2","D:\\D\\Freelance\\tunnin-web\\src\\App.js":"3","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\index.js":"4","D:\\D\\Freelance\\tunnin-web\\src\\components\\Main.jsx":"5","D:\\D\\Freelance\\tunnin-web\\src\\components\\Router\\Router.jsx":"6","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\signedup.js":"7","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\getDataReducer.js":"8","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\signup.js":"9","D:\\D\\Freelance\\tunnin-web\\src\\components\\Notifications\\SessionDetailUser.jsx":"10","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\verify.js":"11","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\profileFace.js":"12","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\profileForm.js":"13","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\connectBank.js":"14","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\notification.js":"15","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\addedSession.js":"16","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\addSession.js":"17","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\sessionDetails.js":"18","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\signupBank.js":"19","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\cancelPolicy.js":"20","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\header.js":"21","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\earningDetails.js":"22","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\updateModal.js":"23","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\earnings.js":"24","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\ratingReview.js":"25","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\payouts.js":"26","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\userProfile.js":"27","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\signUpProfle.js":"28","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\uploadFile.js":"29","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\sessionModal.js":"30","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\settingsSidebar.js":"31","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\signupCategories.js":"32","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\postFetch.js":"33","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\settings.js":"34","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\sessionDetailUserPop.js":"35","D:\\D\\Freelance\\tunnin-web\\src\\actions\\fetchLocalData.js":"36","D:\\D\\Freelance\\tunnin-web\\src\\components\\Notifications\\Notification.jsx":"37","D:\\D\\Freelance\\tunnin-web\\src\\components\\Login\\Login.jsx":"38","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\Verify.jsx":"39","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\Profile.jsx":"40","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\Bank.jsx":"41","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\CreateAccount.jsx":"42","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\ConnectBank.jsx":"43","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\Face.jsx":"44","D:\\D\\Freelance\\tunnin-web\\src\\components\\Session\\NewSession.jsx":"45","D:\\D\\Freelance\\tunnin-web\\src\\components\\Session\\CancelPolicy.jsx":"46","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\Signup.jsx":"47","D:\\D\\Freelance\\tunnin-web\\src\\components\\Session\\SessionDetails.jsx":"48","D:\\D\\Freelance\\tunnin-web\\src\\components\\MyEarnings\\EarningDetails.jsx":"49","D:\\D\\Freelance\\tunnin-web\\src\\components\\Ratings\\Ratings.jsx":"50","D:\\D\\Freelance\\tunnin-web\\src\\components\\Payouts\\Payouts.jsx":"51","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\Privacy.jsx":"52","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\About.jsx":"53","D:\\D\\Freelance\\tunnin-web\\src\\components\\Profile\\UserProfile.jsx":"54","D:\\D\\Freelance\\tunnin-web\\src\\components\\MyEarnings\\Earnings.jsx":"55","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\Terms.jsx":"56","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\Contacts.jsx":"57","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\BankDetails.jsx":"58","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\Faqs.jsx":"59","D:\\D\\Freelance\\tunnin-web\\src\\actions\\sessionDetailUserPop.js":"60","D:\\D\\Freelance\\tunnin-web\\src\\constants\\constants.js":"61","D:\\D\\Freelance\\tunnin-web\\src\\components\\Notifications\\Popup.jsx":"62","D:\\D\\Freelance\\tunnin-web\\src\\components\\Notifications\\Sliders.jsx":"63","D:\\D\\Freelance\\tunnin-web\\src\\actions\\notification.js":"64","D:\\D\\Freelance\\tunnin-web\\src\\actions\\signedUp.js":"65","D:\\D\\Freelance\\tunnin-web\\src\\actions\\verify.js":"66","D:\\D\\Freelance\\tunnin-web\\src\\actions\\signupProfile.js":"67","D:\\D\\Freelance\\tunnin-web\\src\\components\\Header\\Header.jsx":"68","D:\\D\\Freelance\\tunnin-web\\src\\actions\\getFetch.js":"69","D:\\D\\Freelance\\tunnin-web\\src\\actions\\earnings.js":"70","D:\\D\\Freelance\\tunnin-web\\src\\actions\\userProfile.js":"71","D:\\D\\Freelance\\tunnin-web\\src\\actions\\settings.js":"72","D:\\D\\Freelance\\tunnin-web\\src\\actions\\ratingReview.js":"73","D:\\D\\Freelance\\tunnin-web\\src\\actions\\payouts.js":"74","D:\\D\\Freelance\\tunnin-web\\src\\components\\Login\\LoginForm.jsx":"75","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\Sidebar.jsx":"76","D:\\D\\Freelance\\tunnin-web\\src\\components\\Sidebar\\Sidebar.jsx":"77","D:\\D\\Freelance\\tunnin-web\\src\\actions\\earningDetails.js":"78","D:\\D\\Freelance\\tunnin-web\\src\\actions\\sessionModal.js":"79","D:\\D\\Freelance\\tunnin-web\\src\\actions\\sessionDetail.js":"80","D:\\D\\Freelance\\tunnin-web\\src\\actions\\Signup.js":"81","D:\\D\\Freelance\\tunnin-web\\src\\actions\\addSession.js":"82","D:\\D\\Freelance\\tunnin-web\\src\\actions\\cancelPolicy.js":"83","D:\\D\\Freelance\\tunnin-web\\src\\actions\\addedSession.js":"84","D:\\D\\Freelance\\tunnin-web\\src\\actions\\profileFace.js":"85","D:\\D\\Freelance\\tunnin-web\\src\\actions\\uploadedFile.js":"86","D:\\D\\Freelance\\tunnin-web\\src\\actions\\postFetch.js":"87","D:\\D\\Freelance\\tunnin-web\\src\\actions\\connectBank.js":"88","D:\\D\\Freelance\\tunnin-web\\src\\actions\\updateModal.js":"89","D:\\D\\Freelance\\tunnin-web\\src\\actions\\signupBank.js":"90","D:\\D\\Freelance\\tunnin-web\\src\\actions\\header.js":"91","D:\\D\\Freelance\\tunnin-web\\src\\components\\Session\\Popup.jsx":"92","D:\\D\\Freelance\\tunnin-web\\src\\constants\\api_env.js":"93","D:\\D\\Freelance\\tunnin-web\\src\\actions\\settingSidebar.js":"94","D:\\D\\Freelance\\tunnin-web\\src\\components\\Login\\ModalPopup.jsx":"95","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\getApi.js":"96","D:\\D\\Freelance\\tunnin-web\\src\\components\\Agora\\Channel.js":"97","D:\\D\\Freelance\\tunnin-web\\src\\components\\Agora\\Call.js":"98","D:\\D\\Freelance\\tunnin-web\\src\\components\\Agora\\App.js":"99","D:\\D\\Freelance\\tunnin-web\\src\\components\\Agora\\AudioVideo.jsx":"100","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\patchApi.js":"101","D:\\D\\Freelance\\tunnin-web\\src\\actions\\patchApi.js":"102","D:\\D\\Freelance\\tunnin-web\\src\\actions\\getFetchParam.js":"103","D:\\D\\Freelance\\tunnin-web\\src\\components\\Agora\\WebCam.jsx":"104","D:\\D\\Freelance\\tunnin-web\\src\\components\\Agora\\Mic.jsx":"105"},{"size":700,"mtime":1613893719121,"results":"106","hashOfConfig":"107"},{"size":375,"mtime":1610479407938,"results":"108","hashOfConfig":"107"},{"size":601,"mtime":1610989205320,"results":"109","hashOfConfig":"107"},{"size":1899,"mtime":1617280651093,"results":"110","hashOfConfig":"107"},{"size":1253,"mtime":1610989205327,"results":"111","hashOfConfig":"107"},{"size":3913,"mtime":1617274381779,"results":"112","hashOfConfig":"107"},{"size":407,"mtime":1611148337703,"results":"113","hashOfConfig":"107"},{"size":339,"mtime":1611055958421,"results":"114","hashOfConfig":"107"},{"size":395,"mtime":1611148337711,"results":"115","hashOfConfig":"107"},{"size":4862,"mtime":1616754510464,"results":"116","hashOfConfig":"107"},{"size":407,"mtime":1611148337727,"results":"117","hashOfConfig":"107"},{"size":406,"mtime":1611148337677,"results":"118","hashOfConfig":"107"},{"size":415,"mtime":1611148337687,"results":"119","hashOfConfig":"107"},{"size":622,"mtime":1616194248461,"results":"120","hashOfConfig":"107"},{"size":424,"mtime":1611572180097,"results":"121","hashOfConfig":"107"},{"size":525,"mtime":1613737808122,"results":"122","hashOfConfig":"107"},{"size":432,"mtime":1613717409510,"results":"123","hashOfConfig":"107"},{"size":418,"mtime":1613414773160,"results":"124","hashOfConfig":"107"},{"size":587,"mtime":1616193440406,"results":"125","hashOfConfig":"107"},{"size":419,"mtime":1613414773158,"results":"126","hashOfConfig":"107"},{"size":396,"mtime":1614075818564,"results":"127","hashOfConfig":"107"},{"size":420,"mtime":1614086682181,"results":"128","hashOfConfig":"107"},{"size":774,"mtime":1610989205342,"results":"129","hashOfConfig":"107"},{"size":398,"mtime":1614085181624,"results":"130","hashOfConfig":"107"},{"size":400,"mtime":1614066981416,"results":"131","hashOfConfig":"107"},{"size":392,"mtime":1614106045945,"results":"132","hashOfConfig":"107"},{"size":577,"mtime":1614713871510,"results":"133","hashOfConfig":"107"},{"size":625,"mtime":1616197119891,"results":"134","hashOfConfig":"107"},{"size":415,"mtime":1616192544115,"results":"135","hashOfConfig":"107"},{"size":1013,"mtime":1613414773163,"results":"136","hashOfConfig":"107"},{"size":432,"mtime":1615044540050,"results":"137","hashOfConfig":"107"},{"size":427,"mtime":1617280272627,"results":"138","hashOfConfig":"107"},{"size":847,"mtime":1617656017777,"results":"139","hashOfConfig":"107"},{"size":1409,"mtime":1615280195905,"results":"140","hashOfConfig":"107"},{"size":795,"mtime":1616749791436,"results":"141","hashOfConfig":"107"},{"size":297,"mtime":1610989205322,"results":"142","hashOfConfig":"107"},{"size":8572,"mtime":1617733593245,"results":"143","hashOfConfig":"107"},{"size":1329,"mtime":1611253432356,"results":"144","hashOfConfig":"107"},{"size":2437,"mtime":1614772828074,"results":"145","hashOfConfig":"107"},{"size":5152,"mtime":1617356670573,"results":"146","hashOfConfig":"107"},{"size":2740,"mtime":1616193277134,"results":"147","hashOfConfig":"107"},{"size":2708,"mtime":1611572180096,"results":"148","hashOfConfig":"107"},{"size":4144,"mtime":1617360695682,"results":"149","hashOfConfig":"107"},{"size":2897,"mtime":1616192531702,"results":"150","hashOfConfig":"107"},{"size":9699,"mtime":1617373319759,"results":"151","hashOfConfig":"107"},{"size":2181,"mtime":1614075818561,"results":"152","hashOfConfig":"107"},{"size":4021,"mtime":1616196405828,"results":"153","hashOfConfig":"107"},{"size":7246,"mtime":1616599216574,"results":"154","hashOfConfig":"107"},{"size":6029,"mtime":1614713871482,"results":"155","hashOfConfig":"107"},{"size":7836,"mtime":1615048166196,"results":"156","hashOfConfig":"107"},{"size":4400,"mtime":1614253281570,"results":"157","hashOfConfig":"107"},{"size":2428,"mtime":1615282735102,"results":"158","hashOfConfig":"107"},{"size":2406,"mtime":1615282735095,"results":"159","hashOfConfig":"107"},{"size":7069,"mtime":1615011091164,"results":"160","hashOfConfig":"107"},{"size":4916,"mtime":1614251616210,"results":"161","hashOfConfig":"107"},{"size":2568,"mtime":1615282735133,"results":"162","hashOfConfig":"107"},{"size":2748,"mtime":1615282735098,"results":"163","hashOfConfig":"107"},{"size":4024,"mtime":1615282735097,"results":"164","hashOfConfig":"107"},{"size":3440,"mtime":1615282735100,"results":"165","hashOfConfig":"107"},{"size":629,"mtime":1616749649859,"results":"166","hashOfConfig":"107"},{"size":2579,"mtime":1617745161892,"results":"167","hashOfConfig":"107"},{"size":2424,"mtime":1616763816358,"results":"168","hashOfConfig":"107"},{"size":692,"mtime":1616567813097,"results":"169","hashOfConfig":"107"},{"size":1441,"mtime":1616743990124,"results":"170","hashOfConfig":"107"},{"size":190,"mtime":1616195961582,"results":"171","hashOfConfig":"107"},{"size":237,"mtime":1611148337523,"results":"172","hashOfConfig":"107"},{"size":491,"mtime":1616196979980,"results":"173","hashOfConfig":"107"},{"size":4801,"mtime":1617799548859,"results":"174","hashOfConfig":"107"},{"size":606,"mtime":1617662434443,"results":"175","hashOfConfig":"107"},{"size":240,"mtime":1614085181590,"results":"176","hashOfConfig":"107"},{"size":822,"mtime":1614713871478,"results":"177","hashOfConfig":"107"},{"size":1863,"mtime":1615280622105,"results":"178","hashOfConfig":"107"},{"size":241,"mtime":1614066981404,"results":"179","hashOfConfig":"107"},{"size":234,"mtime":1614106045933,"results":"180","hashOfConfig":"107"},{"size":4512,"mtime":1617656089722,"results":"181","hashOfConfig":"107"},{"size":1592,"mtime":1615282735120,"results":"182","hashOfConfig":"107"},{"size":1554,"mtime":1614085181621,"results":"183","hashOfConfig":"107"},{"size":260,"mtime":1614086682178,"results":"184","hashOfConfig":"107"},{"size":870,"mtime":1613414773121,"results":"185","hashOfConfig":"107"},{"size":666,"mtime":1614468690595,"results":"186","hashOfConfig":"107"},{"size":229,"mtime":1611148337464,"results":"187","hashOfConfig":"107"},{"size":244,"mtime":1613717409483,"results":"188","hashOfConfig":"107"},{"size":257,"mtime":1613414773119,"results":"189","hashOfConfig":"107"},{"size":262,"mtime":1613737808119,"results":"190","hashOfConfig":"107"},{"size":241,"mtime":1611148337484,"results":"191","hashOfConfig":"107"},{"size":189,"mtime":1616192538383,"results":"192","hashOfConfig":"107"},{"size":827,"mtime":1617638153439,"results":"193","hashOfConfig":"107"},{"size":479,"mtime":1616194468685,"results":"194","hashOfConfig":"107"},{"size":573,"mtime":1610989205323,"results":"195","hashOfConfig":"107"},{"size":459,"mtime":1616193099079,"results":"196","hashOfConfig":"107"},{"size":231,"mtime":1614075818556,"results":"197","hashOfConfig":"107"},{"size":3029,"mtime":1616745329198,"results":"198","hashOfConfig":"107"},{"size":80,"mtime":1617174960899,"results":"199","hashOfConfig":"107"},{"size":256,"mtime":1615044173472,"results":"200","hashOfConfig":"107"},{"size":3410,"mtime":1613422586221,"results":"201","hashOfConfig":"107"},{"size":694,"mtime":1617740026433,"results":"202","hashOfConfig":"107"},{"size":1296,"mtime":1617288178835,"results":"203","hashOfConfig":"107"},{"size":7024,"mtime":1617973759442,"results":"204","hashOfConfig":"107"},{"size":889,"mtime":1617746316890,"results":"205","hashOfConfig":"107"},{"size":2345,"mtime":1617894891285,"results":"206","hashOfConfig":"107"},{"size":377,"mtime":1617280615069,"results":"207","hashOfConfig":"107"},{"size":787,"mtime":1617737229379,"results":"208","hashOfConfig":"107"},{"size":576,"mtime":1617739702752,"results":"209","hashOfConfig":"107"},{"size":447,"mtime":1617889272650,"results":"210","hashOfConfig":"107"},{"size":663,"mtime":1617895340721,"results":"211","hashOfConfig":"107"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},"16lirns",{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"214"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"214"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"214"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"214"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"214"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"214"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"214"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"214"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"214"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"214"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"214"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"214"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"214"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"214"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"214"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"214"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"214"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"214"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"214"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"214"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"214"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"214"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"214"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"214"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"214"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"214"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"214"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"214"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"214"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"214"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"214"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"214"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"214"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"214"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"214"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"214"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"214"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"214"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"214"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"214"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"214"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"214"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"214"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"214"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"214"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"214"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"214"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"214"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"214"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"214"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"214"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"214"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"214"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"214"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"214"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"214"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"214"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"214"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"214"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"214"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"214"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"214"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"214"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"214"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"214"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"214"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"214"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"214"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"214"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"214"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"214"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"214"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"214"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"214"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},"D:\\D\\Freelance\\tunnin-web\\src\\index.js",[],["497","498"],"D:\\D\\Freelance\\tunnin-web\\src\\reportWebVitals.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\App.js",["499"],"import React from 'react';\r\n\r\n// Components\r\nimport Main from './components/Main';\r\n\r\n// Redux\r\nimport {applyMiddleware, createStore} from 'redux';\r\nimport {logger} from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport {Provider} from 'react-redux';\r\n// Redux Components\r\nimport rootReducer from './reducer/index';\r\n\r\n// Router\r\nimport Router from './components/Router/Router';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(logger, thunk)\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\index.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\components\\Main.jsx",["500"],"import React, { Component } from 'react';\r\n\r\n// Components\r\nimport Login from './Login/Login';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\n// Redux Action\r\nimport { getLocal } from '../actions/fetchLocalData';\r\n\r\n// Data\r\nimport Data from '../Data/Data.json';\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setData();\r\n    }\r\n\r\n    setData = () => {\r\n        this.props.getLocal();\r\n    }\r\n\r\n    getData = () => {\r\n        if (Object.keys(this.props.localData.dataState).length > 0) {\r\n            let data = this.props.localData;\r\n            return (\r\n                <Login loginDetails={data} />\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.getData()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        localData: state.localData\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getLocal: bindActionCreators(getLocal, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Router\\Router.jsx",[],"D:\\D\\Freelance\\tunnin-web\\src\\reducer\\signedup.js",["501"],"// Constants\r\nimport { signed_up } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    signedUp: {\r\n\r\n    } \r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case signed_up:\r\n            return {\r\n                ...state.signedUp,\r\n                signedUp: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\getDataReducer.js",["502"],"const initialState = {\r\n    dataState: {}\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case 'fetchLocalData':\r\n            return {\r\n                ...state.dataState,\r\n                dataState: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\signup.js",["503"],"// Constants\r\nimport { sign_up } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    signUp: {\r\n\r\n    } \r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case sign_up:\r\n            return {\r\n                ...state.signUp,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\components\\Notifications\\SessionDetailUser.jsx",["504","505","506","507","508","509","510","511","512","513"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button, Row, Col, Card, CardText, CardTitle\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { sessionPopup } from '../../actions/sessionDetailUserPop';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Styles\r\nimport '../../styles/notifications.scss';\r\n\r\n// Constants\r\nimport { cancel_session } from '../../constants/constants';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sliders from './Sliders';\r\nimport CancelledPolicy from '../Session/CancelPolicy';\r\nimport Popup from './Popup';\r\n\r\nfunction SessionDetailUser(props) {\r\n\r\n    let data = props.location.state;\r\n    const [cancelPop, setCancelPop] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const [popUpData, setPopupData] = useState({});\r\n\r\n    \r\n    const getDetails=()=> {\r\n        return(\r\n            <Row className=\"session-detail-wrapper\">\r\n                <Col sm=\"3\">\r\n                    <p className=\"session-heading\">\r\n                        {data.heading}\r\n                    </p>\r\n                    <p className=\"session-type\">\r\n                        {data.cName}\r\n                    </p>\r\n                    <p className=\"session-date-time\">\r\n                    <i className=\"icon-ic_clock pr-2\"></i>\r\n                        {data.time}\r\n                    </p>\r\n                    <p className=\"session-date-time\">\r\n                        <i className=\"icon-ic_calendar  pr-2\"></i>\r\n                        {data.date}\r\n                    </p>\r\n                </Col>\r\n                <Col  sm=\"3\">\r\n                    <p className=\"session-info-heading\">\r\n                        {data.need}\r\n                    </p>\r\n                    <p className=\"session-info-content\">\r\n                        {data.needContent}\r\n                    </p>\r\n                </Col>\r\n                <Col  sm=\"3\">\r\n                    <p className=\"session-info-heading\">\r\n                        {data.about}\r\n                    </p>\r\n                    <p className=\"session-info-content\">\r\n                        {data.aboutContent}\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    const seeCancelPolicy=()=> {\r\n        props.history.push('/cancellation-policy');\r\n    }\r\n\r\n    const cancelSession=()=> {\r\n        setCancelPop(!cancelPop);\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <div className=\"session-user-right-container\">\r\n                    <Row className=\"mb-5\">\r\n                        <Col className=\"d-flex align-items-center col-sm-3 pl-5\">\r\n                            <h6 className=\"title m-0\">\r\n                                <i className=\"icon-chevron-left\" onClick={()=>props.history.goBack()}></i>\r\n                                    Sessions Details\r\n                            </h6>\r\n                        </Col>\r\n                        {data.statusDetail === \"Booked\" ?\r\n                        <Col className=\"add-btn-wrapper col-sm-9\">\r\n                            <span>\r\n                                <Button className=\"addBtn\" onClick={()=>{cancelSession()}}>\r\n                                    Cancel Session\r\n                                </Button>\r\n                            </span>\r\n                        </Col>: '' }\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Sliders />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"session-info\">\r\n                                <span className=\"session-status\">\r\n                                   <span className={data.statusDetail}>\r\n                                    <i className={data.statusIcon}></i>\r\n                                   </span>\r\n                                    {data.statusDetail}\r\n                                </span>\r\n                                <span className=\"session-amount\">\r\n                                    {data.amount}\r\n                                </span>\r\n                                <span className=\"cancel-policy-link\" onClick={()=>seeCancelPolicy()}>\r\n                                    {data.cancelPolicy}\r\n                                </span>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    {getDetails()}\r\n                    {cancelPop ? <Popup modalState={cancelPop} action_type={cancel_session} /> : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SessionDetailUser);","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\verify.js",["514"],"// Constants\r\nimport { verify_type } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    verifyData: {\r\n\r\n    } \r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case verify_type:\r\n            return {\r\n                ...state.verify,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\profileFace.js",["515"],"// Constants\r\nimport { profile_face } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    profileFace: {}\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case profile_face:\r\n            return {\r\n                ...state.profileFace,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\profileForm.js",["516"],"// Constants\r\nimport { profile_form } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    profileForm: {\r\n\r\n    } \r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case profile_form:\r\n            return {\r\n                ...state.profileForm,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\connectBank.js",["517"],"// Constants\r\nimport { connect_bank, account_number } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    connectBank: {\r\n\r\n    },\r\n    accountNumber: {\r\n\r\n    } \r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case connect_bank:\r\n            return {\r\n                ...state.connectBank,\r\n                data: actions.payload\r\n            }\r\n        case account_number: {\r\n            return {\r\n                ...state,\r\n                accountNumber: actions.payload\r\n            }\r\n        }    \r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\notification.js",["518"],"// Constants\r\nimport { listed_notification } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    notifications: {}\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case listed_notification:\r\n            return {\r\n                ...state.notifications,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\addedSession.js",["519"],"// Constants\r\nimport { added_session } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    addedNewSession: {\r\n\r\n    },\r\n    editSesion: {\r\n        \r\n    } \r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case added_session:\r\n            return {\r\n                ...state.addedNewSession,\r\n                addedNewSession: actions.payload,\r\n                editSession: actions.editpayload\r\n            } \r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\addSession.js",["520","521"],"// Constants\r\nimport { add_session, added_session } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    addNewSession: {\r\n\r\n    }\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case add_session:\r\n            return {\r\n                ...state.addNewSession,\r\n                data: actions.payload\r\n            } \r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\sessionDetails.js",["522"],"// Constants\r\nimport { session_details } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    sessionDetails: {}\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case session_details:\r\n            return {\r\n                ...state.sessionDetails,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\signupBank.js",["523"],"// Constants\r\nimport { signup_bank, signed_bank } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    signUpBank: {\r\n\r\n    },\r\n    country: {\r\n\r\n    } \r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case signup_bank:\r\n            return {\r\n                ...state.signUpBank,\r\n                data: actions.payload\r\n            }\r\n        case signed_bank:\r\n            return {\r\n                ...state,\r\n                country: actions.payload\r\n            }    \r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\cancelPolicy.js",["524"],"// Constants\r\nimport { cancel_policy } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    cancelPolicy: {\r\n\r\n    } \r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case cancel_policy:\r\n            return {\r\n                ...state.cancelPolicy,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\header.js",["525"],"// Constants\r\nimport { getHeader } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    getHeader: {}\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case getHeader:\r\n            return {\r\n                ...state.getHeader,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\earningDetails.js",["526"],"// Constants\r\nimport { getEarningDetail } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    earningDetails: {}\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case getEarningDetail:\r\n            return {\r\n                ...state.earningDetails,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\updateModal.js",["527"],"const initialState = {\r\n    modalState: {\r\n        popUp: false\r\n    }\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case 'forgotPassword':\r\n            return {\r\n                ...state.modalState,\r\n                popUp: !state.modalState.popUp,\r\n                modalState: actions.payload\r\n            }\r\n        case 'resetPassword':\r\n            return {\r\n                //popUp: !state.modalState.popUp,\r\n                modalState: actions.payload,\r\n                popUp: !state.modalState.popUp\r\n            } \r\n        case 'closeModal':\r\n            return {\r\n                popUp: false,\r\n                modalState: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\earnings.js",["528"],"// Constants\r\nimport { getEarnings } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    earnings: {}\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case getEarnings:\r\n            return {\r\n                ...state.earnings,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\ratingReview.js",["529"],"// Constants\r\nimport { ratingReviews } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    ratings: {}\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case ratingReviews:\r\n            return {\r\n                ...state.ratings,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\payouts.js",["530"],"// Constants\r\nimport { getPayouts } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    payout: {}\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case getPayouts:\r\n            return {\r\n                ...state.payout,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\userProfile.js",["531"],"// Constants\r\nimport { user_profile, user_edit_profile } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    userProfile: {}\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case user_profile:\r\n            return {\r\n                ...state.userProfile,\r\n                data: actions.payload\r\n            }\r\n        case user_edit_profile:\r\n            return {\r\n                ...state.userProfile,\r\n                data: actions.payload\r\n            }    \r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\signUpProfle.js",["532"],"// Constants\r\nimport { signup_profile, signedup_profile } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    signUpProfile: {\r\n\r\n    },\r\n    signedUpProfile: {\r\n\r\n    }\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case signup_profile:\r\n            return {\r\n                ...state.signUpProfile,\r\n                data: actions.payload\r\n            }\r\n        case signedup_profile: \r\n            return {\r\n                ...state,\r\n                signedUpProfile: actions.payload\r\n            }    \r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\uploadFile.js",["533"],"// Constants\r\nimport { uploaded_file } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    uploadFile: {\r\n\r\n    } \r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case uploaded_file:\r\n            return {\r\n                ...state.uploadFile,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\sessionModal.js",["534"],"// Constants\r\nimport { add_session_modal, cancel_session_modal, cancelled_session_modal, close_modal } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    modalState: {\r\n        popUp: false\r\n    }\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case add_session_modal:\r\n            return {\r\n                ...state,\r\n                popUp: true,\r\n                modalState: actions.payload\r\n            }\r\n        case cancel_session_modal:\r\n            return {\r\n                ...state,\r\n                popUp: true,\r\n                modalState: actions.payload\r\n            }\r\n        case cancelled_session_modal:\r\n            return {\r\n                ...state,\r\n                popUp: true,\r\n                modalState: actions.payload\r\n            }   \r\n        case close_modal:\r\n            return {\r\n                ...state,\r\n                popUp: false\r\n            }         \r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\settingsSidebar.js",["535"],"// Constants\r\nimport { setting_sidebar } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    settingsSidebar: {\r\n\r\n    } \r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case setting_sidebar:\r\n            return {\r\n                ...state.settingsSidebar,\r\n                sidebar: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\signupCategories.js",["536"],"// Constants\r\nimport { categories_list } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    categoriesList: {\r\n\r\n    } \r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case categories_list:\r\n            return {\r\n                ...state.categoriesList,\r\n                data: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\postFetch.js",["537"],"// Constants\r\nimport { get_auth, create_user, create_session } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    \r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case get_auth:\r\n            return {\r\n                ...state,\r\n                userLogged: actions.payload,\r\n                userLoginStatus: actions.status\r\n            }\r\n        case create_user:\r\n            return {\r\n                ...state,\r\n                userCreated: actions.payload,\r\n                userCreatedStatus: actions.status\r\n            }\r\n        case create_session:\r\n            return {\r\n                ...state,\r\n                createdSession: actions.payload,\r\n                createdSessionStatus: actions.status\r\n            }    \r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\settings.js",["538"],"// Contant\r\nimport {\r\n    setting_contact,\r\n    setting_bank,\r\n    setting_terms,\r\n    setting_about,\r\n    setting_privacy,\r\n    setting_faqs,\r\n    setting_update_faqs\r\n} from '../constants/constants';\r\n\r\nconst initialState = {\r\n    settings: {\r\n\r\n    }\r\n}\r\n\r\nexport default function (state = initialState, actions) {\r\n    switch (actions.type) {\r\n        case setting_contact:\r\n            return {\r\n                ...state.settings,\r\n                contact: actions.payload\r\n            }\r\n        case setting_bank:\r\n            return {\r\n                ...state.settings,\r\n                bank: actions.payload\r\n            }\r\n        case setting_terms:\r\n            return {\r\n                ...state.settings,\r\n                terms: actions.payload\r\n            }\r\n        case setting_about:\r\n            return {\r\n                ...state.settings,\r\n                about: actions.payload\r\n            }\r\n        case setting_privacy:\r\n            return {\r\n                ...state.settings,\r\n                privacy: actions.payload\r\n            }\r\n        case setting_faqs:\r\n            return {\r\n                ...state.settings,\r\n                faqs: actions.payload\r\n            }\r\n        case setting_update_faqs: \r\n            return {\r\n                ...state.settings,\r\n                faqs: actions.payload\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\sessionDetailUserPop.js",["539"],"// Constants\r\nimport { cancel_session, cancelled_session, close_modal } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    modalState: {\r\n        popUp: false\r\n    }\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case cancel_session:\r\n            return {\r\n                ...state,\r\n                popUp: true,\r\n                modalState: actions.payload\r\n            }\r\n        case cancelled_session:\r\n            return {\r\n                ...state,\r\n                popUp: true,\r\n                modalState: actions.payload\r\n            }\r\n        case close_modal:\r\n            return {\r\n                ...state,\r\n                popUp: false\r\n            }         \r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\actions\\fetchLocalData.js",["540"],"import axios from 'axios';\r\nimport localData from '../Data/Data.json';\r\n\r\nexport const getLocal = () => {\r\n    return (dispatch) => {\r\n        if (localData) {\r\n            dispatch({\r\n                type: 'fetchLocalData',\r\n                payload: localData\r\n            })\r\n        }\r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\components\\Notifications\\Notification.jsx",["541","542","543"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button, Row, Col, Card, CardText, CardTitle\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { ListNotification } from '../../actions/notification';\r\nimport { getFetchParam } from '../../actions/getFetchParam';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { listed_notification, trainer_user_type, upcoming_session, routeAgora } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/notifications.scss';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nimport App from '../Agora/App';\r\n\r\nfunction Notification(props) {\r\n\r\n    const [userType, setUserType] = useState('');\r\n    const [callAgora, setAgora] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const getNotification = useSelector(state => state.notification);\r\n\r\n    const userInfo = useSelector(state => state.postFetch);\r\n\r\n    const upcomingSessions = useSelector(state => state.getApi);\r\n\r\n    const dispatchCheckUser=()=> {\r\n        if(userInfo.hasOwnProperty('userLogged')) {\r\n            console.log(\"User Ifo: \", userInfo.userLogged.userType);\r\n            setUserType(userInfo.userLogged.userType);  \r\n            dispatch(ListNotification(listed_notification, userInfo.userLogged.userType)); \r\n            // UpComing Sessions\r\n            let userId = userInfo.userLogged._id;\r\n            dispatch(getFetchParam(upcoming_session, userId));\r\n        }\r\n        else {\r\n            setUserType(trainer_user_type);\r\n            dispatchNotification();\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatchCheckUser();\r\n        dispatchNotification();\r\n        dipatchGetCards();\r\n    },[]);\r\n\r\n    const dipatchGetCards=()=> {\r\n        if(upcomingSessions.hasOwnProperty('upcomingSession')) {\r\n\r\n        }\r\n    }\r\n\r\n    const dispatchNotification = () => {\r\n        dispatch(ListNotification(listed_notification, userType));\r\n    }\r\n\r\n    // const getCards = () => {\r\n    //     if (getNotification.hasOwnProperty('data')) {\r\n    //         let lists = getNotification.data.cards;\r\n    //         let cards = lists.map((data, index) => {\r\n    //             return (\r\n    //                 <div key={index} className=\"session-cards\">\r\n    //                     <Card body className=\"card-style\">\r\n    //                         <div className=\"card-content\">\r\n    //                             <div>\r\n    //                                 <CardTitle tag=\"h5\">{data.heading}</CardTitle>\r\n    //                                 <CardText>{data.date}</CardText>\r\n    //                                 <CardText>{data.time}</CardText>\r\n    //                             </div>\r\n    //                             {userType && userType === \"user\" ? \r\n    //                                 <div>\r\n    //                                     {data.status!==\"Booked\"?<CardText>{data.status}</CardText>: ''}\r\n    //                                     <Button onClick={()=>{cardRouteUser(data, index)}}>{data.golive}</Button>\r\n    //                                 </div>\r\n    //                             :\r\n    //                                 <div>\r\n    //                                     <CardText className=\"session-amount\">$21</CardText>\r\n    //                                     <CardText>10 users booked</CardText>\r\n    //                                 </div>\r\n    //                             }\r\n    //                         </div>\r\n    //                         {userType && userType === trainer_user_type ? \r\n    //                             <Button onClick={()=>{cardRoute(data, index)}}>{data.golive}</Button> :\r\n    //                             ''\r\n    //                         }\r\n    //                     </Card>\r\n    //                 </div>\r\n    //             )\r\n    //         })\r\n    //         return cards;\r\n    //     }\r\n    // }\r\n\r\n\r\n    const getCards = () => {\r\n        if (upcomingSessions.hasOwnProperty('upcomingSession')) {\r\n            let lists = upcomingSessions.upcomingSession;\r\n            let cards = lists.map((data, index) => {\r\n                return (\r\n                    <div key={index} className=\"session-cards\">\r\n                        <Card body className=\"card-style\">\r\n                            <div className=\"card-content\">\r\n                                <div>\r\n                                    <CardTitle tag=\"h5\">{data.title}</CardTitle>\r\n                                    <CardText>{data.fromDate}</CardText>\r\n                                    <CardText>{data.fromTime} - {data.toTime}</CardText>\r\n                                </div>\r\n                                {userType && userType === \"user\" ? \r\n                                    <div>\r\n                                        {data.status!==\"Booked\"?<CardText>{data.status}</CardText>: ''}\r\n                                        <Button onClick={()=>{cardRouteUser(data, index)}}>View Details</Button>\r\n                                    </div>\r\n                                :\r\n                                    <div>\r\n                                        <CardText className=\"session-amount\">${data.price}</CardText>\r\n                                        <CardText>{data.detail}</CardText>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            {userType && userType === trainer_user_type ? \r\n                                <Button onClick={()=>{cardRouteAgora(data)}}>Go Live</Button> :\r\n                                ''\r\n                            }\r\n                        </Card>\r\n                    </div>\r\n                )\r\n            })\r\n            return cards;\r\n        }\r\n    }\r\n\r\n    const cardRouteAgora=(data)=> {\r\n        props.history.push({\r\n            pathname: routeAgora,\r\n            sessionRes: data\r\n        });\r\n    }\r\n\r\n    const cardRoute=(data, index)=> {\r\n        if(data.golive === data.past) {\r\n            props.history.push(data.routeTo);\r\n        }\r\n        else {\r\n            //setAgora(true);\r\n            props.history.push(data.routeToTest);\r\n        }\r\n    }\r\n\r\n    const cardRouteUser=(data, index)=> {\r\n        props.history.push({\r\n            pathname: data.routeTo,\r\n            state: data\r\n        })\r\n    }\r\n\r\n    const getBtns = () => {\r\n        if (getNotification.hasOwnProperty('data')) {\r\n            let btnList = getNotification.data.btns;\r\n            if(userType !== trainer_user_type) {\r\n                btnList = JSON.parse(JSON.stringify(getNotification.data.btns));\r\n                for(let i=0; i<btnList.length; i++) {\r\n                    btnList[i].flag = btnList[i].sessionType;\r\n                }\r\n            }            \r\n            let btns = btnList.map((data, index) => {\r\n                return (\r\n                    <div key={index} className=\"session-btns\">\r\n                        {data.flag ?                   \r\n                        <Button color=\"outline-secondary\" className={data.sessionType ? \"true-btn\" : \"false-btn\"} onClick={() => routeTo(data, index)}>\r\n                            {data.title}\r\n                        </Button>: ''}     \r\n                    </div>\r\n                )\r\n            });\r\n            return btns;\r\n        }\r\n    }\r\n\r\n    const routeTo = (data, index) => {\r\n        if (data.sessionType) {\r\n            dispatch(ListNotification(data.route, userType));\r\n        }\r\n        else {\r\n            props.history.push(data.route);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    {userType === \"user\" ?\r\n                        '' :\r\n                        <Col className=\"left-container\">\r\n                            <Sidebar />\r\n                        </Col>\r\n                    }\r\n                    <Col sm=\"9\" className=\"custom-offset\">\r\n                        <div className=\"session-btn-wrapper\">\r\n                            {getBtns()}\r\n                        </div>\r\n                        <div className=\"session-cards-wrapper\">\r\n                            {getCards()}\r\n                        </div>\r\n                        {callAgora ? <App/> : ''}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Notification);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Login\\Login.jsx",["544","545"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport logo from '../../images/tunnin-logo.png';\r\nimport '../../styles/login.scss';\r\n\r\n// Components\r\nimport LoginForm from './LoginForm';\r\n\r\nfunction Login(props) {\r\n    \r\n    const [heading, loginHeading] = useState('');\r\n    const [loginform, loginData] = useState({});\r\n\r\n    useEffect(() => {\r\n        setHeading();\r\n        setLoginForm();\r\n    }, []);\r\n\r\n    const setHeading=()=> {\r\n        loginHeading(props.loginDetails.dataState.login.heading);\r\n    }\r\n\r\n    const setLoginForm=()=> {\r\n        loginData(props.loginDetails.dataState.loginForm);\r\n    }\r\n\r\n    const getLoginForm=()=> {\r\n        if(Object.keys(loginform).length > 0) {\r\n            return (\r\n                <LoginForm formData={loginform}/>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"login-container\">\r\n            <Row>\r\n                <Col md=\"6\" sm=\"4\" className=\"left-login\">\r\n                <h1 className=\"login-logo\">\r\n                    <img src={logo} alt=\"Logo\" />\r\n                </h1>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"4\" className=\"right-login\">\r\n                    {getLoginForm()}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\Verify.jsx",["546","547","548","549","550","551"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Row, Col, Label, Input, Button } from 'reactstrap';\r\n\r\nimport logo from '../../images/tunnin-logo.png';\r\nimport verify from '../../images/verify-email-2.png';\r\n// Constants\r\nimport { signed_up } from '../../constants/constants';\r\nimport { verify_type } from '../../constants/constants';\r\n\r\n// Router\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// Actions\r\nimport { SignedUp } from '../../actions/signedUp';\r\nimport { VerifyAction } from '../../actions/verify';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Style\r\nimport '../../styles/verified.scss';\r\n\r\nfunction Verify(props) {\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchSignedupAction();\r\n        dispatchVerify();\r\n    }, [])\r\n\r\n    const dispatchSignedupAction = () => {\r\n        dispatch(SignedUp(signed_up, location));\r\n    }\r\n\r\n    const dispatchVerify = () => {\r\n        dispatch(VerifyAction(verify_type));\r\n    }\r\n\r\n    const verifiedData = useSelector(state => state.verify);\r\n    \r\n    const routeToForm=(routeTo)=> {\r\n        props.history.push(routeTo);\r\n    }\r\n\r\n    const getVerified=()=> {\r\n        if(verifiedData.hasOwnProperty('data')) {\r\n            return(\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"page-logo-wrapper\">\r\n                    <img src={logo} alt=\"Logo\" />\r\n                    </div>\r\n                    <div className=\"verify-img\">\r\n                        <img src={verify} alt=\"Reset Password\" />\r\n                    </div>\r\n                    \r\n                    <h3 className=\"heading\">\r\n                        {verifiedData.data.heading}\r\n                    </h3>\r\n                    <p className=\"text\">\r\n                        {verifiedData.data.msg}\r\n                    </p>\r\n                    <div className=\"next-btn-wrapper\">\r\n                    <Button color=\"primary\" size=\"lg\" onClick={()=>routeToForm(verifiedData.data.route)}>\r\n                        {verifiedData.data.btnText}\r\n                    </Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"verify\">\r\n            {getVerified()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Verify);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\Profile.jsx",["552","553"],"import React, { useEffect } from 'react';\r\n\r\nimport { Row, Col, Label, Input, Button, FormGroup } from 'reactstrap';\r\n\r\nimport Checkbox from \"react-custom-checkbox\";\r\n\r\nimport logo from '../../images/tunnin-logo.png';\r\n// Constants\r\nimport { signup_profile, categories_list, signedup_profile } from '../../constants/constants';\r\n\r\n// Style\r\nimport '../../styles/signupprofile.scss';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { signUpProfile } from '../../actions/signupProfile';\r\nimport { getFetch } from '../../actions/getFetch';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction Profile(props) {\r\n\r\n    useEffect(() => {\r\n        dispatchSignUpProfile();\r\n        dispatchCategories();\r\n    }, [])\r\n\r\n    const dispatchSignUpProfile = () => {\r\n        dispatch(signUpProfile(signup_profile, null));\r\n    }\r\n\r\n    const dispatchCategories = () => {\r\n        dispatch(getFetch(categories_list));\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    const profile = useSelector(state => state.signupProfile);\r\n    const categories = useSelector(state => state.signupCategories);\r\n\r\n    const getProfile = () => {\r\n        if (profile.hasOwnProperty('data')) {\r\n            return (\r\n                <div className=\"container-fluid\">\r\n                    <h3 className=\"heading\">\r\n                        {profile.data.heading}\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </h3>\r\n                    <h5 className=\"subheading\">\r\n                        {profile.data.subHeading}\r\n                    </h5>\r\n                    <Row className=\"signup-second-form-wrapper\">\r\n                        {formList(profile.data)}\r\n                        <Col className=\"offset-md-7\" xs=\"12\" sm=\"5\" md=\"5\" lg=\"5\">\r\n                            <Label className=\"formheading\"><p>{profile.data.categories}</p></Label>\r\n                            <div className=\"checkbox-wrapper\">\r\n                                {formChecks(categories)}\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"d-flex justify-content-center\" xs=\"12\">\r\n                            <Button color=\"primary\" size=\"lg\" onClick={() => routeTo(profile.data.route)}>\r\n                                {profile.data.btnText}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const routeTo = (data) => {\r\n        dispatch(signUpProfile(signedup_profile, form));\r\n        props.history.push(data);\r\n    }\r\n\r\n    const formChecks = (categories) => {\r\n        if (categories.hasOwnProperty('data')) {\r\n            let checks = categories.data.map((items, index) => {\r\n                return (\r\n                    <div className=\"checkboxes\" key={index}>\r\n                        <Checkbox\r\n                            value={items._id}\r\n                            key={items._id}\r\n                            name=\"subscription-checkbox\"\r\n                            checked={false}\r\n                            borderColor=\"#fff\"\r\n                            borderWidth={3}\r\n                            borderRadius={3}\r\n                            style={{ cursor: \"pointer\" }}\r\n                            labelStyle={{ marginLeft: 5, userSelect: \"none\", color: \"#fff\" }}\r\n                            label={items.categoryName}\r\n                            onChange={(e) => handleChangeCheck(e, items._id, items.categoryName)}\r\n                        />\r\n                    </div>\r\n                )\r\n            });\r\n            return checks;\r\n        }\r\n    }\r\n\r\n    let selected_categories = [];\r\n\r\n    const handleChangeCheck=(event, value, name)=> {\r\n        if(event) {      \r\n            selected_categories.push(value);\r\n        }\r\n        else {\r\n            selected_categories.pop(value);\r\n        }\r\n        form['trainer_cat'] = selected_categories;\r\n    }\r\n\r\n    const formList = (data) => {\r\n        let formFields = data.formFields.map((item, index) => {\r\n            return (\r\n                <Col xs=\"12\" sm=\"5\" md=\"5\" lg=\"5\" key={index}>\r\n                    <FormGroup className=\"mb-4\">\r\n                        <Label className=\"formheading\"><p>{item.labelName}</p></Label>\r\n                        {item.type == 'textarea' ?\r\n                            <Input type={item.type} placeholder={item.placeholder} className=\"form-control\" sm={4} onChange={(e)=>handleChange(item.key, e.target.value)} />\r\n                            :\r\n                            <input type={item.type} placeholder={item.placeholder} className=\"form-control\" onChange={(e)=>handleChange(item.key, e.target.value)} />\r\n                        }\r\n                    </FormGroup>\r\n\r\n                </Col>\r\n            )\r\n        })\r\n        return formFields;\r\n    }\r\n\r\n    let form = {};\r\n    \r\n    const handleChange=(key, data)=> {\r\n        form[key] = data;\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            {getProfile()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Profile);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\Bank.jsx",["554","555","556","557","558"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Row, Col, Label, Input, Button } from 'reactstrap';\r\n\r\nimport logo from '../../images/tunnin-logo.png';\r\n\r\n// Constants\r\nimport { signup_bank, signed_bank } from '../../constants/constants';\r\n\r\n// Style\r\nimport '../../styles/signupBank.scss';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { signUpBank } from '../../actions/signupBank';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction Bank(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchSignupBank();\r\n    }, [])\r\n\r\n    const dispatchSignupBank=()=> {\r\n        dispatch(signUpBank(signup_bank, null));\r\n    }\r\n\r\n    const signupbank = useSelector(state => state.signupBank);\r\n\r\n    const getSignUpBank=()=> {\r\n        if(signupbank.hasOwnProperty('data')) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <h5 className=\"heading\">\r\n                        {signupbank.data.heading}\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </h5>\r\n                    <h6 className=\"subheading\">\r\n                        {signupbank.data.subHeading}\r\n                    </h6>\r\n                    <div>\r\n                        <div className=\"country-heading\">\r\n                            <Label for=\"countries\">{signupbank.data.country}</Label>\r\n                            <select className=\"form-control\" name=\"select\" id=\"countries\" onChange={(event)=>selectedValue(event)}>\r\n                                {getSelection(signupbank.data)}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"next-btn-wrapper\">\r\n                        <Button color=\"primary\" size=\"lg\" onClick={()=>routeTo(signupbank.data.route)}>\r\n                            {signupbank.data.btnText}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const routeTo=(data)=> {\r\n        dispatch(signUpBank(signed_bank, country));\r\n        props.history.push(data);\r\n    }\r\n\r\n    let country;\r\n\r\n    const selectedValue=(event)=> {\r\n        country = event.target.value;\r\n    }\r\n\r\n    const getSelection=(data)=> {\r\n        let dropDown = data.countryList.map((item, index)=> {\r\n            return(\r\n                <option key={index} value={item.value}>\r\n                    {item.name}\r\n                </option>\r\n            )\r\n        })\r\n        return dropDown;\r\n    }\r\n\r\n    return(\r\n        <div className=\"signup-bank\">\r\n            {getSignUpBank()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Bank);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\CreateAccount.jsx",["559","560","561","562"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Row, Col, Form, FormGroup, Input, Button } from 'reactstrap';\r\n\r\nimport logo from '../../images/tunnin-logo.png';\r\n\r\n// Constants\r\nimport { connect_bank } from '../../constants/constants';\r\n\r\n// Style\r\nimport '../../styles/login.scss';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { updateModal } from '../../actions/updateModal';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction CreateAccount(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const modalState = useSelector(state => state.updateModal);\r\n\r\n    const route = (location) => {\r\n        props.history.push(location);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatchClose();\r\n    }, []);\r\n\r\n    const dispatchClose=()=> {\r\n        dispatch(updateModal('close'));\r\n    }\r\n\r\n\r\n    const getCreateAccount = () => {\r\n        if (Object.keys(modalState).length > 0) {\r\n            let loginForm = modalState.modalState;\r\n            return (\r\n                <div className=\"login-form\">\r\n                    <h2 className=\"login-form-heading\">\r\n                        {loginForm.welcomeText}\r\n                    </h2>\r\n                    <p className=\"login-form-note\">\r\n                        {loginForm.heading}\r\n                    </p>\r\n                    <Form className=\"get-started-wrapper\">\r\n                        <FormGroup className=\"text-center\">\r\n                            <Button color=\"primary\" size=\"lg\">\r\n                                {loginForm.btnText}\r\n                            </Button>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <div className=\"text-center\" style={{ display: \"inline-block\" }}>\r\n                                <p style={{ display: \"inline-block\" }}>{loginForm.question}</p>\r\n                                <p style={{ display: \"inline-block\", cursor: \"pointer\" }} onClick={() => route(loginForm.route)}>{loginForm.signIn}</p>\r\n                            </div>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <Row>\r\n                <Col md=\"6\" sm=\"4\" className=\"left-login\">\r\n                    <h1 className=\"login-logo\">\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </h1>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"4\" className=\"right-login\">\r\n                    {getCreateAccount()}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(CreateAccount);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\ConnectBank.jsx",["563"],"import React, { useEffect } from 'react';\r\n\r\nimport { Label, Input, Button, FormGroup } from 'reactstrap';\r\n\r\nimport logo from '../../images/tunnin-logo.png';\r\n\r\n// Constants\r\nimport { connect_bank, account_number, create_user, get_auth, notification_route } from '../../constants/constants';\r\n\r\n// Style\r\nimport '../../styles/connectBank.scss';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { connectBank } from '../../actions/connectBank';\r\nimport { postFetch } from '../../actions/postFetch';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\nimport { fine_res } from '../../constants/api_env';\r\n\r\nfunction ConnectBank(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchConnectBank();\r\n    }, [])\r\n\r\n    const dispatchConnectBank = () => {\r\n        dispatch(connectBank(connect_bank, null));\r\n    }\r\n\r\n    const connectbank = useSelector(state => state.connectBank);\r\n\r\n    const allStates = useSelector(state => state);\r\n\r\n    const routeTo=(location)=> {\r\n        console.log(\"State: \", allStates);\r\n        let bodyFormData = new FormData();\r\n        bodyFormData.append(\"fullName\", allStates.signedup.f_name);\r\n        bodyFormData.append(\"username\", allStates.signupProfile.signedUpProfile.username);\r\n        bodyFormData.append(\"email\", allStates.signedup.email);\r\n        bodyFormData.append(\"password\", allStates.signedup.c_pass);\r\n        bodyFormData.append(\"userType\", \"trainer\");\r\n        bodyFormData.append(\"dob\", allStates.signedup.dob);\r\n        bodyFormData.append(\"trainer_Cat\", allStates.signupProfile.signedUpProfile.trainer_cat);\r\n        //bodyFormData.append(\"profilePic\", \"abc xyz\");\r\n        bodyFormData.append(\"about\", allStates.signupProfile.signedUpProfile.about);\r\n\r\n\r\n        dispatch(postFetch(create_user, bodyFormData));\r\n\r\n            \r\n    }\r\n\r\n    const loginUser=()=> {\r\n        let form = {\r\n            \"username\": allStates.signupProfile.signedUpProfile.username,\r\n            \"password\": allStates.signedup.c_pass\r\n        }\r\n        dispatch(postFetch(get_auth, form));\r\n    }\r\n\r\n    const userInfo = useSelector(state => state.postFetch);\r\n    \r\n    if(userInfo.hasOwnProperty('userLogged')) {\r\n        props.history.push(notification_route);\r\n    }\r\n\r\n    if (allStates.postFetch.hasOwnProperty('userCreatedStatus')) {\r\n        let userCheck = allStates.postFetch.userCreatedStatus;\r\n        console.log(\"UserCheck\", userCheck);\r\n        if (userCheck === fine_res) {\r\n            loginUser();\r\n            //props.history.push(location);\r\n        }\r\n        else {\r\n            console.log(\"Error: \", userCheck);\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n\r\n    const getConnectBank = () => {\r\n        if (connectbank.hasOwnProperty('data')) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <h5 className=\"heading\">\r\n                        {connectbank.data.heading}\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </h5>\r\n                    <h6 className=\"subheading\">\r\n                        {connectbank.data.subHeading}\r\n                    </h6>\r\n                    <p>\r\n                    </p>\r\n                    <FormGroup className=\"connect-input-wrapper\">\r\n                        <Label className=\"label\" for=\"connect-bank\">{connectbank.data.label}</Label>\r\n                        <Input id=\"connect-bank\" type=\"text\" onChange={(event) => selectedValue(account_number, event.target.value)} />\r\n                    </FormGroup>\r\n                    <div className=\"next-btn-wrapper\">\r\n                        <Button color=\"primary\" size=\"lg\" onClick={() => routeTo(connectbank.data.route)}>\r\n                            {connectbank.data.btnText}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const selectedValue = (field, data) => {\r\n        dispatch(connectBank(field, data));\r\n    }\r\n\r\n    return (\r\n        <div className=\"connect-bank\">\r\n            {getConnectBank()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ConnectBank);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\Face.jsx",["564"],"import React, { useEffect } from 'react';\r\n\r\nimport { Button } from 'reactstrap';\r\n\r\nimport logo from '../../images/tunnin-logo.png';\r\n\r\n// Constants\r\nimport { profile_face } from '../../constants/constants';\r\n\r\n// Style\r\nimport '../../styles/signupface.scss';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { profileFace } from '../../actions/profileFace';\r\nimport { uploadFile } from '../../actions/uploadedFile';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction Face(props) {\r\n   \r\n    const dispatch = useDispatch();\r\n    const signUpFace = useSelector(state => state.profileFace);\r\n\r\n    useEffect(() => {\r\n        dispatchProfileFace();\r\n    }, [])\r\n\r\n    const dispatchProfileFace = () => {\r\n        dispatch(profileFace(profile_face));\r\n    }\r\n\r\n    const getProfileFace = () => {\r\n        if (signUpFace.hasOwnProperty('data')) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <h5 className=\"heading\">\r\n                        {signUpFace.data.heading}\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </h5>\r\n                    <h6 className=\"subheading\">\r\n                        {signUpFace.data.subHeading}\r\n                    </h6>\r\n                    <h6 className=\"upload-heading\">\r\n                        {signUpFace.data.upload}\r\n                    </h6>\r\n                    <div className=\"d-flex\">\r\n                        {uploads(signUpFace.data)}\r\n                    </div>\r\n                    <div className=\"next-btn-wrapper\">\r\n                        <Button color=\"primary\" size=\"lg\" onClick={()=>routeTo(signUpFace.data.route)}>\r\n                            {signUpFace.data.btnText}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const routeTo=(data)=> {\r\n        dispatch(uploadFile(uploaded_image));\r\n        props.history.push(data);\r\n    }\r\n\r\n    const uploads=(data)=> {\r\n        let uploads = data.imageList.map((item, index)=> {\r\n            return(\r\n                <div className=\"uploads\" key={index}>\r\n                    <label htmlFor=\"fileUpload\">\r\n                        <span className=\"upload-icon-wrapper\" >\r\n                            <i className=\"icon-cloud\"></i>\r\n                        </span>\r\n                        <p>{item.label}</p>\r\n                    </label>\r\n                    <input hidden id=\"fileUpload\" type=\"file\" onChange={(e)=>uploadedFile(e)} />\r\n                </div>\r\n            )\r\n        });\r\n        return uploads;\r\n    }\r\n\r\n    let uploaded_image;\r\n\r\n    const uploadedFile=(event)=> {\r\n        uploaded_image = event.target.files[0];\r\n    }\r\n\r\n    return (\r\n        <div className=\"signup-face\">\r\n            {getProfileFace()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Face);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Session\\NewSession.jsx",["565","566","567","568","569","570"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Form, FormGroup, Label, Input, Row, Col, Card\r\n} from 'reactstrap';\r\n\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { sessionModal } from '../../actions/sessionModal';\r\nimport { addSession } from '../../actions/addSession';\r\nimport { addedSession } from '../../actions/addedSession';\r\nimport { getFetch } from '../../actions/getFetch';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { add_session, add_session_modal, categories_list, create_session } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/newsession.scss';\r\n\r\n// Action\r\nimport { postFetch } from '../../actions/postFetch';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Popup from './Popup';\r\n\r\nfunction AddSession(props) {\r\n\r\n    let sessionForm = {};\r\n\r\n    const dispatch = useDispatch();\r\n    const [form, setform] = useState({});\r\n    const [editForm, setEditForm] = useState({});\r\n\r\n    const newSession = useSelector(state => state.addSession);\r\n\r\n    const editSession = useSelector(state => state.addedSession);\r\n\r\n    const categories = useSelector(state => state.signupCategories);\r\n\r\n    const userFetch = useSelector(state => state.postFetch);\r\n\r\n    const dispatchCategories = () => {\r\n        dispatch(getFetch(categories_list));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatchNewSession();\r\n        dispatchEditSession();\r\n        dispatchCategories();\r\n    }, []);\r\n\r\n\r\n    const dispatchNewSession = () => {\r\n        dispatch(addSession(add_session));\r\n    }\r\n\r\n    const dispatchEditSession=()=> {\r\n        if(Object.keys(editSession).length > 0) {\r\n            setEditForm(editSession.addedNewSession);\r\n        }\r\n    }\r\n\r\n    const getSessionTop = () => {\r\n        if (newSession.hasOwnProperty('data')) {\r\n            return (\r\n                <Row className=\"mb-3\">\r\n                    <Col className=\"d-flex align-items-center col-sm-6\">\r\n                        <h6 className=\"title m-0\">\r\n                            <i className=\"icon-chevron-left\" onClick={()=>props.history.goBack()}></i>\r\n                            {editSession.hasOwnProperty('editSession') ? editSession.editSession.title : newSession.data.title}\r\n                        </h6>\r\n                    </Col>\r\n                    <Col className=\"add-btn-wrapper col-sm-6\">\r\n                        <Button className=\"addBtn\" onClick={()=>dispatchAction()}>\r\n                            {editSession.hasOwnProperty('editSession') ? editSession.editSession.btnTitle : newSession.data.btnTitle}\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n    }\r\n\r\n    const dispatchAction=()=> {\r\n        dispatch(addedSession(sessionForm));   \r\n        if(props.history.location.pathname === \"/edit-session\") {\r\n            props.history.push('/home-past');\r\n        }\r\n        else {\r\n            dispatch(sessionModal(add_session_modal));\r\n            dispatchCreateSession();\r\n        }\r\n    }\r\n\r\n    const dispatchCreateSession=()=> {\r\n        let bodyFormData = new FormData();\r\n        if(userFetch.hasOwnProperty('userLogged')) {\r\n            bodyFormData.append(\"trainerId\", userFetch.userLogged._id);\r\n            bodyFormData.append(\"catId\", sessionForm.category);\r\n            bodyFormData.append(\"title\", sessionForm.name_of_class);\r\n            bodyFormData.append(\"fromDate\", Date.parse(sessionForm.start_date));\r\n            bodyFormData.append(\"toDate\", Date.parse(sessionForm.end_date));\r\n            bodyFormData.append(\"fromTime\", sessionForm.start_time);\r\n            bodyFormData.append(\"toTime\", sessionForm.end_time);\r\n            bodyFormData.append(\"price\", sessionForm.session_price);\r\n            bodyFormData.append(\"userLimit\", userFetch.userLogged._id);\r\n            bodyFormData.append(\"requirements\", sessionForm.what_you_need);\r\n            bodyFormData.append(\"detail\", sessionForm.about);\r\n            bodyFormData.append(\"images\", uploaded_image);\r\n            bodyFormData.append(\"competencylevel\", \"Beginner\");\r\n        }\r\n        console.log(\"Body Form Data: \", bodyFormData);\r\n        dispatch(postFetch(create_session, bodyFormData));\r\n    }\r\n\r\n    const popup = useSelector(state => state.sessionModal);\r\n\r\n    const getImages = () => {\r\n        if (newSession.hasOwnProperty('data')) {\r\n            return (\r\n                <Row>\r\n                    <Col sm=\"12\">\r\n                        <p className=\"upload-title\">\r\n                            {newSession.data.upload}\r\n                        </p>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Row>\r\n                            {getuploads()}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        }\r\n    }\r\n\r\n    const getuploads=()=> {\r\n        if (newSession.hasOwnProperty('data')) {\r\n            let cards = newSession.data.cardList;\r\n            let cardList = cards.map((data, index)=> {\r\n                return(\r\n                    <Col sm=\"3\" key={index}>\r\n                        <Card className=\"uploads\">\r\n                            <label htmlFor=\"fileUpload\">\r\n                                <div className=\"d-none upload-icon-wrapper\">\r\n                                    {data.icon}\r\n                                </div>\r\n                                {props.history.location.pathname === \"/add-new-session\"\r\n                                    ?\r\n                                    <i className=\"icon-cloud\"></i>\r\n                                    :\r\n                                    <span className=\"delete-img-wrapper\">\r\n                                        <i className=\"icon-delete\"></i>\r\n                                    </span>\r\n                                }\r\n                            </label>\r\n                            <input hidden id=\"fileUpload\" type=\"file\" onChange={(e)=>uploadedFile(e)} />\r\n                        </Card>\r\n                    </Col>\r\n                );\r\n            });\r\n            return cardList;\r\n        }\r\n    }\r\n\r\n    let uploaded_image;\r\n\r\n    const uploadedFile=(event)=> {\r\n        uploaded_image = event.target.files[0];\r\n    }\r\n\r\n    const getForm=()=> {\r\n        if (newSession.hasOwnProperty('data')) {\r\n            let form = newSession.data.sessionForm;\r\n            let formList = form.map((data, index)=> {\r\n                return(\r\n                    <Col key={index} sm={data.size}>\r\n                        <FormGroup>\r\n                            <Label className={data.title !=\"\" ? \"form-title\": \"form-empty-title\"}>\r\n                                {data.title}\r\n                            </Label>\r\n                            {data.type == \"select\" ?\r\n                                // <select className=\"form-control\" name={data.name} defaultValue={editSession.addedNewSession[data.name]} onChange={(e)=>{getNewSession(data.name, e.target.value)}} >\r\n                                //     {getOptions(data.options)}\r\n                                // </select>\r\n                                <select className=\"form-control\" name={data.name} onChange={(e)=>{getNewSession(data.name, e.target.value)}}>\r\n                                    {getOptions(categories.data)}\r\n                                </select>                   \r\n                                :\r\n                                <Input placeholder={data.placeholder} type={data.type} name={data.name} defaultValue={editSession.addedNewSession[data.name]} onChange={(e)=>{getNewSession(data.name, e.target.value)}} />\r\n                            }                  \r\n                        </FormGroup>\r\n                    </Col>\r\n                );\r\n            });\r\n            return formList;\r\n        }\r\n    }\r\n\r\n    const getNewSession=(key, value)=> {\r\n        sessionForm[key] = value;\r\n        console.log(\"SessionForm : \", sessionForm);\r\n    }\r\n\r\n    const getOptions=(data)=> {\r\n        if(categories.hasOwnProperty('data')) {\r\n            let options = data.map((data, index)=> {\r\n                return(\r\n                    <option value={data._id} key={index}>\r\n                        {data.categoryName}\r\n                    </option>\r\n                );\r\n            });\r\n            return options;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"new-session\">\r\n            {popup.popUp ?            \r\n                <Popup modalState={popup} action_type={add_session_modal} />\r\n                :\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container-fluid\">\r\n                        <Row>\r\n                            <Col className=\"left-container\">\r\n                                <Sidebar />\r\n                            </Col>\r\n                            <Col  className=\"mt-3\">\r\n                                <div className=\"add-session-right-container\">\r\n                                    {getSessionTop()}\r\n                                    {getImages()}\r\n                                    <Form className=\"tunnin-form mt-5\">\r\n                                        <Row>\r\n                                            {getForm()}\r\n                                        </Row>\r\n                                    </Form>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(AddSession);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Session\\CancelPolicy.jsx",["571","572","573"],"import React, { useEffect } from 'react';\r\n\r\n// ReactStrap\r\nimport { Row, Col } from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { cancelPolicy } from '../../actions/cancelPolicy';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { cancel_policy } from '../../constants/constants';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\n// Styles\r\nimport '../../styles/cancelpolicy.scss';\r\n\r\nimport dp from '../../images/dp.png';\r\n\r\nfunction CancelledPolicy() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchSessionPolicy();\r\n    }, []);\r\n\r\n    const dispatchSessionPolicy = () => {\r\n        dispatch(cancelPolicy(cancel_policy));\r\n    }\r\n\r\n    const cancelationPolicy = useSelector(state => state.cancelPolicy);\r\n    console.log(\"Cons, \", cancelationPolicy);\r\n\r\n    const getCancelPolicyData = () => {\r\n        if (cancelationPolicy.hasOwnProperty('data')) {\r\n            return (\r\n                <div>\r\n                    <div className=\"cancel\">\r\n                        <h6 className=\"title m-0\">\r\n                            <i className=\"icon-chevron-left\"></i>\r\n                            {cancelationPolicy.data.title}\r\n                        </h6>\r\n                        <p className=\"cancel-policy-text\">\r\n                            {cancelationPolicy.data.content}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"cancel-policy\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col className=\"mt-5\">\r\n                        <div className=\"cancel-policy-right-container\">\r\n                            {getCancelPolicyData()}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CancelledPolicy;","D:\\D\\Freelance\\tunnin-web\\src\\components\\Signup\\Signup.jsx",["574","575","576"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Row, Col, Label, Input, Button, FormGroup} from 'reactstrap';\r\n\r\nimport Checkbox from \"react-custom-checkbox\";\r\n\r\nimport logo from '../../images/tunnin-logo.png';\r\n\r\n// Constants\r\nimport { sign_up, signed_up } from '../../constants/constants';\r\n\r\n// Actions\r\nimport { Signup } from '../../actions/Signup';\r\nimport { SignedUp } from '../../actions/signedUp';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Styles\r\nimport '../../styles/signup.scss'\r\n\r\nfunction SignUp(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // State\r\n    const [formVal, setForm] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatchSignupAction();\r\n    }, [])\r\n\r\n    const dispatchSignupAction = () => {\r\n        dispatch(Signup(sign_up));\r\n    }\r\n\r\n    const signupState = useSelector(state => state.signup);\r\n\r\n\r\n    const getSignUp = () => {\r\n        if (signupState.hasOwnProperty('data')) {\r\n            return (\r\n                <div className=\"container-fluid\">\r\n                    <h2 className=\"heading\">\r\n                        {signupState.data.heading}\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </h2>\r\n                    <p className=\"subheading\">\r\n                        {signupState.data.subHeading}\r\n                    </p>\r\n                    <Row className=\"signup-first-form-wrapper\">\r\n                        {formDetail(signupState.data)}\r\n                        <Col xs=\"12\" sm=\"5\" md=\"5\" lg=\"5\">\r\n                            <FormGroup className=\"subscription-checkbox-wrapper \">\r\n                                <Checkbox\r\n                                    name=\"subscription-checkbox\"\r\n                                    checked={false}\r\n                                    onChange={(e)=>handleChange('subscribe', e.target.checked)}\r\n                                    borderColor=\"#fff\"\r\n                                    borderWidth={3}\r\n                                    borderRadius={3}\r\n                                    style={{cursor: \"pointer\",}}\r\n                                    labelStyle={{ marginLeft: 5, userSelect: \"none\", color: \"#fff\" }}\r\n                                    label={signupState.data.subscribe}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col className=\"d-flex justify-content-center\" xs=\"12\">\r\n                            <Button color=\"primary\" size=\"lg\" onClick={()=>formValue(signupState.data)} >\r\n                                {signupState.data.btnText}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    let form = {};\r\n    \r\n    const handleChange=(key, data)=> {\r\n        form[key] = data;\r\n    }\r\n\r\n    const formValue=(data)=> {\r\n        setForm(form);\r\n        dispatch(SignedUp(signed_up, form));\r\n        props.history.push(data.route);    \r\n    }\r\n    \r\n    const formDetail = (data) => {\r\n        let formDetails = data.details.map((item, index) => {\r\n            return (\r\n                <Col xs=\"12\" sm=\"5\" md=\"5\" lg=\"5\" key={index}>\r\n                    <FormGroup className=\"custom-input-wrapper\">\r\n                        <Label className=\"formheading\"><p>{item.name}</p></Label>                      \r\n                        <input type={item.type} placeholder={item.placeholder} className=\"form-control\" onChange={(e)=>handleChange(item.field, e.target.value)}/> \r\n                        <span className=\"input-icons secondary\"><i className={item.fieldIcon}></i></span>    \r\n                    </FormGroup>     \r\n                </Col>\r\n            )\r\n        })\r\n        return formDetails;\r\n    }\r\n\r\n    return (\r\n        <div className=\"signup\">\r\n            {getSignUp()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SignUp);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Session\\SessionDetails.jsx",["577","578","579","580"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Row, Col, Card, CardText, CardBody,\r\n    CardTitle\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { sessionDetails } from '../../actions/sessionDetail';\r\nimport { sessionModal } from '../../actions/sessionModal';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { session_details, session_past_details, cancel_session_modal, cancelled_session_modal } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/sessionDetails.scss';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Popup from './Popup';\r\nimport dp from '../../images/dp.png';\r\nimport suser from '../../images/session-user.png';\r\n\r\nfunction SessionDetail(props) {\r\n\r\n    const [detailType, detailTypeAction] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatchSessionDetails();\r\n    }, []);\r\n\r\n    const dispatchSessionDetails=()=> {\r\n        if(props.history.location.pathname === \"/session-details-past\") {\r\n            dispatch(sessionDetails(session_past_details));\r\n        }\r\n        else {\r\n            dispatch(sessionDetails(session_details));\r\n        }\r\n    }\r\n\r\n    const sessionDetail = useSelector(state => state.sessionDetails);\r\n    \r\n    const popup = useSelector(state => state.sessionModal);\r\n\r\n    const getUpper=()=> {\r\n        if(sessionDetail.hasOwnProperty('data')) {\r\n            return(\r\n                <div>\r\n                    <Row className=\"mb-3\">\r\n                        <Col className=\"d-flex align-items-center col-sm-3\">\r\n                            <h6 className=\"title m-0\">\r\n                                <i className=\"icon-chevron-left\" onClick={()=>props.history.goBack()}></i>\r\n                                {sessionDetail.data.title}\r\n                            </h6>\r\n                        </Col>\r\n                        <Col className=\"add-btn-wrapper col-sm-9\">\r\n                            <span>\r\n                                {getBtns()}\r\n                            </span>\r\n                        </Col>\r\n                    </Row>\r\n                </div>           \r\n            )\r\n        }\r\n    }\r\n\r\n    const getBtns=()=> {\r\n        if(sessionDetail.hasOwnProperty('data')) {\r\n            let btns = sessionDetail.data.btns.map((data, index)=> {\r\n                return(\r\n                    <span key={index}>\r\n                        {data.flag ?\r\n                            <Button className=\"topbtn-style addBtn\" onClick={() => detailAction(data)}>\r\n                                {data.title}\r\n                            </Button>\r\n                            :\r\n                            ''\r\n                        }\r\n                    </span>\r\n                );\r\n            });\r\n            return btns;\r\n        }\r\n    }\r\n\r\n    const detailAction=(type)=> {\r\n        let data = type.action;\r\n        if(data == \"cancel\") {\r\n            detailTypeAction(data);\r\n            dispatch(sessionModal(cancel_session_modal));\r\n        }\r\n        else {\r\n            props.history.push(type.route);\r\n        }   \r\n    }\r\n\r\n    const getUpperCard=()=> {\r\n        if(sessionDetail.hasOwnProperty('data')) {\r\n            return(\r\n                <div>\r\n                    <div className=\"top-borderless-card\">\r\n                        <Row>\r\n                            <Col sm=\"6\">\r\n                                <Card body className=\"card-style session-info-card\">\r\n                                    <div className=\"card-content\">\r\n                                        <div>\r\n                                            <CardTitle tag=\"h5\">{sessionDetail.data.detailTitle}</CardTitle>\r\n                                            <CardText>{sessionDetail.data.detailDate}</CardText>\r\n                                            <CardText>{sessionDetail.data.detailTime}</CardText>\r\n                                        </div>\r\n                                        <div>\r\n                                            <CardText className=\"session-amount\">$21</CardText>\r\n                                            <CardText>{sessionDetail.data.booked}</CardText>\r\n                                        </div>\r\n                                    </div>\r\n                                </Card>\r\n                            </Col>\r\n                            {props.history.location.pathname === \"/session-details\" ?\r\n                                <Col sm=\"6\" className=\"d-flex justify-content-end align-items-end\">\r\n                                    <p className=\"cancel-policy-text\" onClick={() => cancelPolicy(sessionDetail.data.cancelroute)}>\r\n                                        {sessionDetail.data.cancellationPolicy}\r\n                                    </p>\r\n                                </Col>\r\n                                :\r\n                                ''}\r\n                        </Row>\r\n                    </div>\r\n                    <div>\r\n                        <Row>\r\n                            <Col sm=\"12\">\r\n                                <h5 className=\"users-booked-title\">{sessionDetail.data.usersViewed}</h5>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const cancelPolicy=(location)=> {\r\n        props.history.push(location);\r\n    }\r\n\r\n    const getBookedUsers=()=> {\r\n        if(sessionDetail.hasOwnProperty('data')) {\r\n            let users = sessionDetail.data.usersList.map((data, index) => {\r\n                return(\r\n                    <Col key={index}>\r\n                        <Card className=\"card-style session-user-card\">\r\n                            <CardBody>\r\n                            <img src={suser} alt=\"user-dp\" />\r\n                                <span className=\"session-user-name\">{data.name}</span>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            });\r\n            return users;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"session-details\">    \r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col className=\"mt-5\">\r\n                        <div className=\"session-details-right-container\">\r\n                            {getUpper()}\r\n                            {getUpperCard()}\r\n                            <Row>\r\n                                {getBookedUsers()}\r\n                                {detailType === \"cancel\" ?\r\n                                    <Popup modalState={popup} />  \r\n                                    :\r\n                                    ''\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row> \r\n            </div>   \r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SessionDetail);","D:\\D\\Freelance\\tunnin-web\\src\\components\\MyEarnings\\EarningDetails.jsx",["581","582","583","584"],"import React, { useEffect } from 'react';\r\nimport {\r\n    Table, Row, Col, Card, CardText,\r\n    CardTitle\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { fetchEarningDetail } from '../../actions/earningDetails';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { getEarningDetail } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/earnings.scss';\r\n\r\nimport tdp from '../../images/table-dp.png';\r\nimport cc from '../../images/credit-card.png';\r\nimport bookings from '../../images/bookings.png';\r\nimport stocks from '../../images/stocks.png';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction EarningDetails(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchEarningDetail();\r\n    }, []);\r\n\r\n    const dispatchEarningDetail = () => {\r\n        dispatch(fetchEarningDetail(getEarningDetail));\r\n    }\r\n\r\n    const getEarn = useSelector(state => state.earningDetails);\r\n\r\n    const getUpperPart = () => {\r\n        if (getEarn.hasOwnProperty('data')) {\r\n            let earnings = getEarn.data;\r\n            return (\r\n                <div>\r\n                    <Row>\r\n                        <Col>\r\n                            <h6 className=\"title\">\r\n                                <i className=\"icon-chevron-left\" onClick={()=>props.history.goBack()}></i>\r\n                                {earnings.heading}\r\n                            </h6>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm=\"6\">\r\n                            <Card body className=\"card-style earning-info-card\">\r\n                                <div className=\"card-content\">\r\n                                    <div>\r\n                                        <CardTitle tag=\"h5\">{earnings.leftSection.name}</CardTitle>\r\n                                        <CardText className=\"date\">{earnings.leftSection.date}</CardText>\r\n                                        <CardText className=\"time\">{earnings.leftSection.time}</CardText>\r\n                                    </div>\r\n                                    <div>\r\n                                        <CardText className=\"session-amount\">{earnings.leftSection.price}</CardText>\r\n                                        <CardText>{earnings.leftSection.booked}</CardText>\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                        {getUpperCards(earnings.upperCards)}\r\n                    </Row>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const getUpperCards = (data) => {\r\n        let cards = data.map((items, index) => {\r\n            return (\r\n                <Col key={index} sm=\"2\">\r\n                    <Card body className=\"card-style earning-stats\">\r\n                        <div className=\"card-content \">\r\n                            <div>\r\n                                <img src={stocks} alt=\"icons\"/>\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                                <CardTitle className={items.textClass} tag=\"h5\">{items.price}</CardTitle>\r\n                                <CardText>{items.title}</CardText>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        });\r\n        return cards;\r\n    }\r\n\r\n    const getTableHeaders = () => {\r\n        if (getEarn.hasOwnProperty('data')) {\r\n            let tableHeaders = getEarn.data.tableHeader.map((data, index) => {\r\n                return (\r\n                    <th key={index}>\r\n                        {data.title}\r\n                    </th>\r\n                )\r\n            });\r\n            return tableHeaders;\r\n        }\r\n    }\r\n\r\n    const getTableValues = () => {\r\n        if (getEarn.hasOwnProperty('data')) {\r\n            let getValues = getEarn.data.tableValues.map((data, index) => {\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>\r\n                        <img className=\"dp-img\" src={tdp} alt=\"credit-card-picture\"/>\r\n                            {data.name}\r\n                        </td>\r\n                        <td>\r\n                            <img className=\"cc-img\" src={cc} alt=\"credit-card-picture\"/>\r\n                            {data.card}\r\n                        </td>\r\n                        <td>\r\n                            {data.date}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            });\r\n            return getValues;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"earning\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                    <div className=\"earnings-right-container\">\r\n                        <div className=\"session-btn-wrapper\">\r\n                            {getUpperPart()}\r\n                        </div>\r\n                        <div className=\"session-details-table-wrapper\">\r\n                            <Table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        {getTableHeaders()}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {getTableValues()}\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(EarningDetails);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Ratings\\Ratings.jsx",["585","586","587","588","589","590","591","592","593","594","595","596"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Form, FormGroup, Label, Input, Row, Col, Card, CardText, CardBody, CardLink,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { ratingReview } from '../../actions/ratingReview';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { ratingReviews } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/ratings.scss';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nimport dp from '../../images/dp.png';\r\n\r\nfunction Ratings(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchRatings();\r\n    }, []);\r\n\r\n\r\n    const dispatchRatings = () => {\r\n        dispatch(ratingReview(ratingReviews));\r\n    }\r\n\r\n    const getRatings = useSelector(state => state.ratingReview);\r\n\r\n    const getRating=()=> {\r\n        if(getRatings.hasOwnProperty('data')) {\r\n            return (\r\n                <Row>\r\n                    <Col>\r\n                        <h6 className=\"ratings-heading\">\r\n                            {getRatings.data.heading}\r\n                        </h6>\r\n                    </Col>\r\n                    <Col>\r\n                        <p className=\"number-of-ratings\">\r\n                            {getRatings.data.rightheaing}\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        }\r\n    }\r\n\r\n    const getUpperCard=()=> {\r\n        if(getRatings.hasOwnProperty('data')) {\r\n            let upperCards = getRatings.data.upperCard.map((data, index)=> {\r\n                return(\r\n                    <div className=\"ratings-main-card\" key={index}>\r\n                        <i className=\"icon-chevron-left\" onClick={()=>props.history.goBack()}></i>\r\n                        <Card body className=\"card-style\">\r\n                            <div className=\"card-content\">\r\n                                <div>\r\n                                    <CardTitle tag=\"h5\">{data.date}</CardTitle>\r\n                                    <CardText className=\"duration\">{data.time}</CardText>\r\n                                </div>\r\n                                <div>\r\n                                    <CardText className=\"earned\">{data.earned}</CardText>\r\n                                    <CardText className=\"viewers\">{data.content}</CardText>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                )\r\n            });\r\n            return upperCards;\r\n        }\r\n    }\r\n\r\n    const getList=()=> {\r\n        if(getRatings.hasOwnProperty('data')) {\r\n            let ratingList = getRatings.data.ratingList.map((data, index)=> {\r\n                return(\r\n                    <Col sm=\"4\" key={index}>\r\n                        <div  className=\"ratings-cards\">\r\n                            <Card body className=\"card-style\">\r\n                                <div className=\"card-content\">\r\n                                    <div className=\"d-flex justify-content-between align=items-center\">\r\n                                        <CardTitle className=\"d-flex align=items-center\" tag=\"h5\">\r\n                                            <img src={dp} alt=\"user-dp\" />\r\n                                            <span className=\"name-date-wrapper\"> \r\n                                                <span className=\"name\">{data.name}</span>\r\n                                                <span className=\"date\">{data.date}</span>\r\n                                            </span>\r\n                                        </CardTitle>\r\n                                        \r\n                                        <CardText className=\"rating\">\r\n                                            {data.rating}\r\n                                            <i className=\"icon-Star\"></i>\r\n                                        </CardText>\r\n                                    </div>\r\n                                    <div>\r\n                                        <CardText className=\"rating-content\">{data.content}</CardText>\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                )\r\n            });\r\n            return ratingList;\r\n        }\r\n    }\r\n\r\n    const getpagePoint=()=> {\r\n        return(\r\n            <div className=\"rating-detail-page-points\">\r\n                <div className=\"rating-points-container\">\r\n                    <div className=\"rating-points\">\r\n                        <div>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <span className=\"rating\" >4.7</span>\r\n                                <i className=\"icon-Star\"></i>\r\n                            </div>\r\n                            <p className=\"out-of-five\">Out of 5</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <span className=\"rating-count\">500 Ratings & Reviews</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getSessionRating=()=> {\r\n        return(\r\n            <div className=\"rating-points-container\">\r\n                <div className=\"rating-points\">\r\n                    <div>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <span className=\"rating\" >4.7</span>\r\n                            <i className=\"icon-Star\"></i>\r\n                        </div>\r\n                        <p className=\"out-of-five\">Out of 5</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"ratings\">\r\n           <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col className=\"mt-3\">\r\n                        <div className=\"ratings-right-container\">\r\n                            <div className=\"d-flex align-items-center rating-header-block\">\r\n                                {/* display this section for session details*/}\r\n                                \r\n                                {props.history.location.pathname != \"/session-ratings\" ?\r\n                                    getpagePoint()\r\n                                    :\r\n                                    getUpperCard()    \r\n                                }\r\n                                \r\n                                {/* display this secton for session details*/}\r\n\r\n\r\n                               {/* display this section for session ratings*/}\r\n\r\n                                {props.history.location.pathname == \"/session-ratings\" ?\r\n                                    getSessionRating()\r\n                                    :\r\n                                    ''\r\n                                }\r\n                                \r\n                                {/* display this secton for session ratings*/}\r\n                            </div>\r\n                            <div className=\"mt-4 mb-4\">\r\n                                {getRating()}\r\n                            </div>\r\n                            <Row>\r\n                                {getList()}\r\n                            </Row>        \r\n                        </div>            \r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Ratings);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Payouts\\Payouts.jsx",["597","598","599","600"],"import React, { useEffect } from 'react';\r\nimport { Table, Row, Col, Card, CardText,  Input,\r\n    CardTitle} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { fetchPayout } from '../../actions/payouts';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { getPayouts } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/payout.scss';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction Payouts(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=> {\r\n        dispatchPayouts();\r\n    }, []);\r\n\r\n    const dispatchPayouts=()=> {\r\n        dispatch(fetchPayout(getPayouts));\r\n    }\r\n\r\n    const payouts = useSelector(state => state.payouts);\r\n\r\n    const getUpperPart=()=> {\r\n        if(payouts.hasOwnProperty('data')) {\r\n            let pays = payouts.data;\r\n            return(\r\n                <div>\r\n                    <Row>\r\n                        <Col>\r\n                        <h1 className=\"payouts-heading\">\r\n                            {pays.heading}\r\n                        </h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"payout-date-wrapper\">\r\n                                {getInputs(pays.inputs)}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const getInputs=(data)=> {\r\n        let cards = data.map((items, index)=> {\r\n            return(\r\n                <div className=\"payout-date-feilds\"  key={index}>\r\n                    <span className=\"date-label\">{items.label}</span> <Input type={items.type}  placeholder={items.placeholder} />\r\n                </div>\r\n            )\r\n        });\r\n        return cards;\r\n    }\r\n\r\n    const getTableHeaders=()=> {\r\n        if(payouts.hasOwnProperty('data')) {\r\n            let tableHeaders = payouts.data.tableHeader.map((data, index)=> {\r\n                return (\r\n                    <th key={index}>\r\n                        {data.title}\r\n                    </th>\r\n                )\r\n            });\r\n            return tableHeaders;\r\n        }\r\n    }\r\n\r\n    const getTableValues=()=> {\r\n        if(payouts.hasOwnProperty('data')) {\r\n            let getValues = payouts.data.tableValues.map((data, index)=>{\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>\r\n                            {data.date}\r\n                        </td>\r\n                        <td>\r\n                            {data.period}\r\n                        </td>\r\n                        <td>\r\n                            {data.earnings}\r\n                        </td>\r\n                        <td>\r\n                            {data.fees}\r\n                        </td>\r\n                        <td>\r\n                            {data.totalpayouts}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            });\r\n            return getValues;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"payouts\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"payouts-right-container\">\r\n                            <div>\r\n                                {getUpperPart()}\r\n                            </div>\r\n                            <div>\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            {getTableHeaders()}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {getTableValues()}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>      \r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Payouts);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\Privacy.jsx",["601","602","603"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Row, Col\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settings } from '../../actions/settings';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { setting_privacy } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/settings.scss';\r\n\r\n// Components\r\nimport SettingSidebar from './Sidebar';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction Privacy(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchContact();\r\n    }, []);\r\n\r\n    const dispatchContact = () => {\r\n        dispatch(settings(setting_privacy));\r\n    }\r\n\r\n    const getSettings = useSelector(state => state.settings);\r\n\r\n    const getPrivacy = () => {\r\n        if (getSettings.hasOwnProperty('privacy')) {\r\n            let privacy = getSettings.privacy;\r\n            return (\r\n                <div className=\"privacy\">\r\n                    <div className=\"settings-container\">\r\n                        <h5 className=\"settings-heading\">\r\n                        <i className=\"icon-shield\"></i>\r\n                            {privacy.title}\r\n                        </h5>\r\n                        <p>\r\n                            {privacy.description}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getSettingSidebar = () => {\r\n        return (\r\n            <SettingSidebar />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className=\"h-100\">\r\n                            <Col className=\"p-0 settings-sidebar-wrapper\">\r\n                                {getSettingSidebar()}\r\n                            </Col>\r\n                            <Col sm=\"9\">\r\n                                {getPrivacy()}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Privacy);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\About.jsx",["604","605","606"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Row, Col\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settings } from '../../actions/settings';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { setting_about } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/settings.scss';\r\n\r\n// Components\r\nimport SettingSidebar from './Sidebar';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction About(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchContact();\r\n    }, []);\r\n\r\n    const dispatchContact = () => {\r\n        dispatch(settings(setting_about));\r\n    }\r\n\r\n    const getSettings = useSelector(state => state.settings);\r\n\r\n    const getAbout = () => {\r\n        if (getSettings.hasOwnProperty('about')) {\r\n            let about = getSettings.about;\r\n            return (\r\n                <div className=\"about\">\r\n                    <div className=\"settings-container\">\r\n                        <h5 className=\"settings-heading\">\r\n                            <i className=\"icon-info\"></i>\r\n                            {about.title}\r\n                        </h5>\r\n                        <p>\r\n                            {about.description}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getSettingSidebar = () => {\r\n        return (\r\n            <SettingSidebar />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className=\"h-100\">\r\n                            <Col className=\"p-0 settings-sidebar-wrapper\">\r\n                                {getSettingSidebar()}\r\n                            </Col>\r\n                            <Col sm=\"9\">\r\n                                {getAbout()}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(About);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Profile\\UserProfile.jsx",["607","608","609","610","611","612","613","614"],"import React, { useEffect } from 'react';\r\nimport {\r\n    Button, Form, FormGroup, Label, Input, Row, Col, Card, CardText, CardBody, CardLink,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { userProfile } from '../../actions/userProfile';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { user_profile, user_edit_profile } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/profile.scss';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nimport profileCover from '../../images/profile-cover.png';\r\nimport profileDp from '../../images/profile-dp.png';\r\nfunction UserProfile(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=> {\r\n        dispatchUserProfile();\r\n    });\r\n\r\n    const dispatchUserProfile=()=> {\r\n        if(props.history.location.pathname === \"/edit-user-profile\") {\r\n            dispatch(userProfile(user_edit_profile));\r\n        }\r\n        else {\r\n            dispatch(userProfile(user_profile));\r\n        }\r\n    }\r\n\r\n    const users = useSelector(state => state.userProfile);\r\n\r\n    const getUpperPart=()=> {\r\n        if(users.hasOwnProperty('data')) {\r\n            let upper = users.data;\r\n            return(\r\n                <Row className=\"mb-3\">\r\n                    <Col className=\"d-flex align-items-center col-6\">\r\n                        <h6 className=\"title m-0\">\r\n                            <i className=\"icon-chevron-left\" onClick={()=>props.history.goBack()}></i>\r\n                            {upper.title}\r\n                        </h6>\r\n                    </Col>\r\n\r\n                    {getBtns(upper.btns)}\r\n\r\n                </Row>\r\n            )\r\n        }\r\n    }\r\n\r\n    const routeTo=(location)=> {\r\n        props.history.push(location);\r\n    }\r\n\r\n    const getBtns=(data)=> {\r\n        let btns = data.map((items, index)=> {\r\n            return(\r\n                <Col className=\"add-btn-wrapper col-6\" key={index}>\r\n                    {\r\n                        items.flag ?\r\n                        <Button className=\"addBtn\" onClick={()=>routeTo(items.route)}>\r\n                            <i className={items.iconClass}></i>\r\n                            {items.title}\r\n                        </Button>\r\n                        :\r\n                        ''\r\n                    }\r\n                </Col>\r\n            );\r\n        });\r\n        return btns;\r\n    }\r\n\r\n    const getProfile=()=> {\r\n        if(users.hasOwnProperty('data')) {\r\n            let profile = users.data.userDetails;\r\n            return(\r\n                <Col>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <span className=\"profile-img-wrapper position-relative\">\r\n                        <img src={profileDp} />\r\n                        \r\n                        {props.history.location.pathname === \"/edit-user-profile\"\r\n                        ?\r\n                            <span className=\"delete-overlay\">\r\n                                <span className=\"delete-img-wrapper\">\r\n                                    <i className=\"icon-delete\"></i>\r\n                                </span>\r\n                            </span>\r\n                        :\r\n                            ''\r\n                        } \r\n                    </span>\r\n                    <span className=\"profile-name-wrapper\">\r\n                        <span className=\"profile-name\">\r\n                            {profile.name}\r\n                        </span>\r\n                        <span className=\"username\">\r\n                            {profile.id}\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n                    \r\n                    \r\n                </Col>\r\n            ); \r\n        }\r\n    }\r\n\r\n    const getProfileImages=()=> {\r\n        if(users.hasOwnProperty('data')) {\r\n            let profileDetail = users.data.userDetails.coverImages.map((data, index)=> {\r\n                return(\r\n                    <Col className=\"cover-images\" key={index}>\r\n                        <div className=\"position-relative\">\r\n                            <img src={profileCover} alt={data.alt}/>\r\n                            {props.history.location.pathname === \"/edit-user-profile\"\r\n                            ?\r\n                                <span className=\"delete-overlay\">\r\n                                    <span className=\"delete-img-wrapper\">\r\n                                        <i className=\"icon-delete\"></i>\r\n                                    </span>\r\n                                </span>\r\n                            :\r\n                                ''\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                );\r\n            })\r\n            return profileDetail;\r\n        }\r\n    }\r\n\r\n    const getUserForm=()=> {\r\n        if(users.hasOwnProperty('data')) {\r\n            let form = users.data.userDetails.userform.map((data, index)=> {\r\n                return(\r\n                    <Col className={data.paddingClass} key={index}>\r\n                        <FormGroup>\r\n                            <Label className={data.title !=\"\" ? \"form-title\": \"form-empty-title\"}>\r\n                                {data.title}\r\n                            </Label>\r\n                            <Input placeholder={data.placeholder} type={data.type} name={data.name} disabled />                \r\n                        </FormGroup>\r\n                    </Col>\r\n                )\r\n            });\r\n            return form;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"profiles\">\r\n           <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"profile-right-container\">\r\n                            <div className=\"profile-header mt-4\">\r\n                                {getUpperPart()}\r\n                            </div>\r\n                            <Row  className=\"user-profile-wrapper\">\r\n                                {getProfile()}\r\n                            </Row >\r\n                            <Row className=\"profile-cover-wrapper\">\r\n                                {getProfileImages()}\r\n                            </Row>\r\n                            <Form className=\"tunnin-form\">\r\n                                <Row className={props.history.location.pathname===\"/user-profile\" ? \"user-profile-form-read-only\" : \"user-profile-form-edit\"}>\r\n                                    {getUserForm()}\r\n                                </Row>                            \r\n                            </Form>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UserProfile);","D:\\D\\Freelance\\tunnin-web\\src\\components\\MyEarnings\\Earnings.jsx",["615"],"import React, { useEffect } from 'react';\r\nimport { Table, Row, Col, Card, CardText, \r\n    CardTitle} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { fetchEarning } from '../../actions/earnings';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { getEarnings } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/earnings.scss';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction Earnings(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=> {\r\n        dispatchEarnings();\r\n    }, []);\r\n\r\n    const dispatchEarnings=()=> {\r\n        dispatch(fetchEarning(getEarnings));\r\n    }\r\n\r\n    const getEarn = useSelector(state => state.earnings);\r\n\r\n    const getUpperPart=()=> {\r\n        if(getEarn.hasOwnProperty('data')) {\r\n            let earnings = getEarn.data;\r\n            return(\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <h1 className=\"earning-heading\">\r\n                                {earnings.heading}\r\n                            </h1>\r\n                           <div className=\"d-flex align-items-center earning-stats-wrapper\">\r\n                                {getUpperCards(earnings.upperCards)}\r\n                           </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        }\r\n    }\r\n\r\n    const routeTo=(location)=> {\r\n        props.history.push(location);\r\n    }\r\n\r\n    const getUpperCards=(data)=> {\r\n        let cards = data.map((items, index)=> {\r\n            return(\r\n                <Col key={index}>\r\n                    <Card body className=\"card-style\" onClick={()=>routeTo(items.route)}>\r\n                        <div className=\"card-content\">\r\n                            <div className=\"stock-icon-wrapper\">\r\n                                <i className=\"icon-stocks\"></i>\r\n                            </div>\r\n                            <div>\r\n                                <CardTitle tag=\"h5\">{items.price}</CardTitle>\r\n                                <CardText>{items.title}</CardText>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        });\r\n        return cards;\r\n    }\r\n\r\n    const getTableHeaders=()=> {\r\n        if(getEarn.hasOwnProperty('data')) {\r\n            let tableHeaders = getEarn.data.tableHeader.map((data, index)=> {\r\n                return (\r\n                    <th key={index}>\r\n                        {data.title}\r\n                    </th>\r\n                )\r\n            });\r\n            return tableHeaders;\r\n        }\r\n    }\r\n\r\n    const getTableValues=()=> {\r\n        if(getEarn.hasOwnProperty('data')) {\r\n            let getValues = getEarn.data.tableValues.map((data, index)=>{\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>\r\n                            {data.nameofSession}\r\n                        </td>\r\n                        <td>\r\n                            {data.date}\r\n                        </td>\r\n                        <td>\r\n                            {data.time}\r\n                        </td>\r\n                        <td>\r\n                            {data.users}\r\n                        </td>\r\n                        <td>\r\n                            {data.earnings}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            });\r\n            return getValues;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"earning\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"earnings-right-container\">\r\n                            <div className=\"mb-5\">\r\n                                {getUpperPart()}\r\n                            </div>\r\n                            <div>\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            {getTableHeaders()}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {getTableValues()}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div> \r\n                        </div>     \r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Earnings);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\Terms.jsx",["616","617","618"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Row, Col\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settings } from '../../actions/settings';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { setting_terms } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/settings.scss';\r\n\r\n// Components\r\nimport SettingSidebar from './Sidebar';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction Terms(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchContact();\r\n    }, []);\r\n\r\n    const dispatchContact = () => {\r\n        dispatch(settings(setting_terms));\r\n    }\r\n\r\n    const getSettings = useSelector(state => state.settings);\r\n\r\n    const getTerms = () => {\r\n        if (getSettings.hasOwnProperty('terms')) {\r\n            let settingTerms = getSettings.terms;\r\n            return (\r\n                <div className=\"terms\">\r\n                    <div className=\"settings-container\">\r\n                        <h5 className=\"settings-heading\">\r\n                            <i className=\"icon-portable-document-format\"></i>\r\n                            {settingTerms.title}\r\n                        </h5>\r\n                        <p>\r\n                            {settingTerms.description}\r\n                        </p>\r\n                        <p>\r\n                            {settingTerms.descriptionFooter}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getSettingSidebar = () => {\r\n        return (\r\n            <SettingSidebar />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className=\"h-100\">\r\n                            <Col className=\"p-0 settings-sidebar-wrapper\">\r\n                                {getSettingSidebar()}\r\n                            </Col>\r\n                            <Col sm=\"9\">\r\n                                {getTerms()}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Terms);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\Contacts.jsx",["619","620"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Row, Col\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settings } from '../../actions/settings';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { setting_contact } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/settings.scss';\r\n\r\n// Components\r\nimport SettingSidebar from './Sidebar';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction Contacts(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchContact();\r\n    }, []);\r\n\r\n    const dispatchContact = () => {\r\n        dispatch(settings(setting_contact));\r\n    }\r\n\r\n    const getSettings = useSelector(state => state.settings);\r\n\r\n    const getContacts = () => {\r\n        if (getSettings.hasOwnProperty('contact')) {\r\n            let contacts = getSettings.contact;\r\n            return (\r\n                <div className=\"contacts\">\r\n                   <div className=\"settings-container\">\r\n                        <h5 className=\"settings-heading\">\r\n                            <i className=\"icon-avatar\"></i>\r\n                            {contacts.title}\r\n                        </h5>\r\n                        <textarea className=\"contact-admin-textarea\" name=\"contact\" id=\"contactAdmin\" cols=\"30\" rows=\"10\" placeholder={contacts.description}></textarea>\r\n                        <div className=\"text-center\">\r\n                            <Button color=\"primary\" className=\"action-btn\">\r\n                                {contacts.btn}\r\n                            </Button>\r\n                        </div>\r\n                   </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getSettingSidebar = () => {\r\n        return (\r\n            <SettingSidebar />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className=\"h-100\">\r\n                            <Col className=\"p-0 settings-sidebar-wrapper\">\r\n                                {getSettingSidebar()}\r\n                            </Col>\r\n                            <Col sm=\"9\">\r\n                                {getContacts()}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Contacts);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\BankDetails.jsx",["621","622","623","624","625","626","627","628"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Form, FormGroup, Label, Input, Row, Col, Card, CardText, CardBody, CardLink,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settings } from '../../actions/settings';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { setting_bank } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/settings.scss';\r\n\r\n// Components\r\nimport SettingSidebar from './Sidebar';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction BankDetails(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchContact();\r\n    }, []);\r\n\r\n    const dispatchContact = () => {\r\n        dispatch(settings(setting_bank));\r\n    }\r\n\r\n    const getSettings = useSelector(state => state.settings);\r\n\r\n    const getBankDetails = () => {\r\n        if (getSettings.hasOwnProperty('bank')) {\r\n            let bankDetail = getSettings.bank;\r\n            return (\r\n                <div className=\"banks\">\r\n                    <div className=\"settings-container\">\r\n                        <h5 className=\"settings-heading\">\r\n                            <i className=\"icon-info\"></i>\r\n                            {bankDetail.title}\r\n                        </h5>\r\n                        <Form className=\"tunnin-form\">\r\n                            <Row>\r\n                                {getBankForm()}\r\n                            </Row>\r\n                            <div>\r\n                            <label> Verification Images</label>\r\n                            <div className=\"uploads-btn-wrapper\">\r\n                                <span className=\"uploads-btn\">\r\n                                    <i className=\"icon-cloud\"></i>\r\n                                </span>\r\n                                <span className=\"uploads-btn\">\r\n                                    <i className=\"icon-cloud\"></i>\r\n                                </span>\r\n                            </div>\r\n                            </div>\r\n                        </Form>\r\n                        <div className=\"text-center\">\r\n                            <Button color=\"primary\" className=\"action-btn\">\r\n                                Save\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getBankForm=()=> {\r\n        if (getSettings.hasOwnProperty('bank')) {\r\n            let form = getSettings.bank.bankform.map((data, index)=> {\r\n                return (\r\n                    <Col sm=\"6\" key={index}>\r\n                        <FormGroup>\r\n                            <Label className=\"formheading\">{data.title}</Label>\r\n                            <Input type={data.type} size={data.size} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                )\r\n            });\r\n            return form;\r\n        }\r\n    }\r\n\r\n    const getSettingSidebar = () => {\r\n        return (\r\n            <SettingSidebar />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className=\"h-100\">\r\n                            <Col className=\"p-0 settings-sidebar-wrapper\">\r\n                                {getSettingSidebar()}\r\n                            </Col>\r\n                            <Col sm=\"9\">\r\n                                {getBankDetails()}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(BankDetails);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\Faqs.jsx",["629","630","631"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Row, Col, Collapse, CardBody, Card, CardHeader\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settings } from '../../actions/settings';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { setting_faqs } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/settings.scss';\r\n\r\n// Components\r\nimport SettingSidebar from './Sidebar';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction Faqs(props) {\r\n\r\n    const toggle=(data, index)=>{\r\n        dispatch(settings(data));\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchContact();\r\n    }, []);\r\n\r\n    const dispatchContact = () => {\r\n        dispatch(settings(setting_faqs));\r\n    }\r\n\r\n    const getSettings = useSelector(state => state.settings);\r\n\r\n    const getFaqs = () => {\r\n        if (getSettings.hasOwnProperty('faqs')) {\r\n            let faqs = getSettings.faqs;\r\n            return (\r\n                <div className=\"faqs\">\r\n                    <div className=\"settings-container\">\r\n                        <h5 className=\"settings-heading\">\r\n                            <i className=\"icon-communications\"></i>\r\n                            {faqs.title}\r\n                        </h5>\r\n                        <div className=\"faq-accordion\">\r\n                            {getQuestions()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getQuestions=()=> {\r\n        if(getSettings.hasOwnProperty('faqs')) {\r\n            let quesLists = getSettings.faqs.quesList;\r\n            console.log(\"quesList\", getSettings.faqs);\r\n            let ques = quesLists.map((data, index)=> {\r\n                return(\r\n                    <Card key={index} onClick={()=>toggle(data, index)}>\r\n                        <CardHeader>\r\n                            {data.title}\r\n                            <i className=\"icon-chevron-down\"></i>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={data.flag}>\r\n                            <CardBody>\r\n                                {data.description}\r\n                            </CardBody>\r\n                        </Collapse>                    \r\n                    </Card>\r\n                );\r\n            });\r\n            return ques;\r\n        }\r\n    }\r\n\r\n    const getSettingSidebar = () => {\r\n        return (\r\n            <SettingSidebar />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className=\"h-100\">\r\n                            <Col className=\"p-0 settings-sidebar-wrapper\">\r\n                                {getSettingSidebar()}\r\n                            </Col>\r\n                            <Col sm=\"9\">\r\n                                {getFaqs()}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Faqs);","D:\\D\\Freelance\\tunnin-web\\src\\actions\\sessionDetailUserPop.js",["632","633"],"import localData from '../Data/Data.json';\r\n\r\n// Constants\r\nimport { cancel_session, cancelled_session, close_modal } from '../constants/constants';\r\n\r\nexport const sessionPopup=(type)=> {\r\n    if(type == cancel_session) {\r\n        return {\r\n            type: cancel_session,\r\n            payload: localData.sessionNotificationPop.cancelSession\r\n        }\r\n    }\r\n    else if(type == cancelled_session) {\r\n        return {\r\n            type: cancelled_session,\r\n            payload: localData.sessionNotificationPop.cancelled\r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            type: close_modal\r\n        }\r\n    }\r\n}\r\n\r\n","D:\\D\\Freelance\\tunnin-web\\src\\constants\\constants.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\components\\Notifications\\Popup.jsx",["634","635","636","637","638"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { sessionPopup } from '../../actions/sessionDetailUserPop';\r\n\r\n// Constants\r\nimport { cancel_session, close_modal, cancelled_session } from '../../constants/constants';\r\n\r\nconst Popup = (props) => {\r\n\r\n    console.log(\"Props: \", props);\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const dispatch = useDispatch();\r\n    const [popUpData, setPopupData] = useState({});\r\n\r\n    useEffect(() => {\r\n        dispatchCancelPop();\r\n    }, []);\r\n\r\n    const dispatchCancelPop = () => {\r\n        dispatch(sessionPopup(cancel_session));\r\n    }\r\n\r\n    const sessionClose = useSelector(state => state.sessionDetailUserPop);\r\n    console.log(\"New Session\", sessionClose);\r\n\r\n    const getBtns = (btns) => {\r\n        let btn = btns.map((data, index) => {\r\n            return (\r\n                <Button className={data.btnClass} color=\"primary\" key={index} onClick={()=>getAction(data, index)}>\r\n                    {data.title}\r\n                </Button>\r\n            )\r\n        });\r\n        return btn;\r\n    }\r\n\r\n    const getAction=(data, index)=> {\r\n        if(data.action === \"close\") {\r\n            dispatch(sessionPopup(close_modal));\r\n        }\r\n        else {\r\n            dispatch(sessionPopup(cancelled_session));\r\n        }     \r\n    }\r\n\r\n    const getModal = () => {\r\n        let state = sessionClose.modalState;\r\n        console.log(\"Session CLose: \", sessionClose);\r\n        if (state.hasOwnProperty('content')) {\r\n            return (\r\n                <Modal className={sessionClose.modalState.popupClass+\" tunnin-popup modal-dialog-centered\"} isOpen={sessionClose.popUp}>\r\n                    <ModalBody className=\"justify-content-center\" >\r\n                        <p className=\"text-center opacity-69\">\r\n                            {state.content}\r\n                        </p>\r\n                    </ModalBody>\r\n                    <ModalFooter className=\"border-0 justify-content-center\">\r\n                        {getBtns(state.btns)}\r\n                    </ModalFooter>\r\n                </Modal>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {getModal()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popup;","D:\\D\\Freelance\\tunnin-web\\src\\components\\Notifications\\Sliders.jsx",["639","640","641"],"import React, { Component } from 'react';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport userSlider from '../../images/user-slider-image.png';\r\n\r\nclass Sliders extends Component {\r\n    render() {\r\n        return (\r\n            <Carousel>\r\n                <div>\r\n                    <img src={userSlider} />\r\n                </div>\r\n                <div>\r\n                    <img src={userSlider} />\r\n                </div>\r\n                <div>\r\n                    <img src={userSlider} />\r\n                </div>\r\n            </Carousel>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sliders;","D:\\D\\Freelance\\tunnin-web\\src\\actions\\notification.js",["642"],"import localData from '../Data/Data.json';\r\n\r\n// Constants\r\nimport { listed_notification, trainer_user_type } from '../constants/constants';\r\n\r\nexport const ListNotification=(type, userType)=> {\r\n    if(type == \"past\") {\r\n        let cards;\r\n        let data = JSON.parse(JSON.stringify(localData.notification));\r\n        if(userType === trainer_user_type) {\r\n            cards = data.cards;\r\n            for(let i=0; i<cards.length; i++) {\r\n                cards[i].golive = cards[i].past;\r\n            }\r\n        }\r\n        else {\r\n            cards = data.userCards;\r\n            for(let i=0; i<cards.length; i++) {\r\n                cards[i].golive = cards[i].past;\r\n            }\r\n            data.cards = data.userCards;\r\n        }\r\n        return {\r\n            type: listed_notification,\r\n            payload: data,\r\n        }\r\n    }\r\n    else {\r\n        let cards;\r\n        let data = JSON.parse(JSON.stringify(localData.notification));\r\n        if(userType !== trainer_user_type) {\r\n            cards = data.userCards;\r\n            console.log(\"Users: \", cards);\r\n            for(let i=0; i<cards.length; i++) {\r\n                cards[i].golive = cards[i].past;\r\n                cards[i].status=\"Booked\";\r\n                cards[i].statusDetail = \"Booked\";\r\n            }\r\n            data.cards = data.userCards;\r\n        }\r\n        return {\r\n            type: listed_notification,\r\n            payload: data,\r\n        }\r\n    }\r\n}\r\n","D:\\D\\Freelance\\tunnin-web\\src\\actions\\signedUp.js",["643"],"// Constants\r\nimport { signed_up } from '../constants/constants';\r\n\r\nexport const SignedUp=(action_type, data)=> {\r\n    return {\r\n        type: action_type,\r\n        payload: data,\r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\actions\\verify.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\signupProfile.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\components\\Header\\Header.jsx",["644"],"import React, { useState, useEffect } from 'react';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Styles\r\nimport '../../styles/ratings.scss';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\n// Action\r\nimport { fetchHeader } from '../../actions/header';\r\nimport { getFetch } from '../../actions/getFetch';\r\n\r\n// Constants\r\nimport { getHeader, trainer_user_type, user_logout } from '../../constants/constants';\r\nimport { fine_res } from '../../constants/api_env';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport dp from '../../images/dp.png';\r\n\r\nfunction Header(props) {\r\n\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [userType, setUserType] = useState({});\r\n    const [userLoggedDetails, setUserLogged] = useState({});\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userInfo = useSelector(state => state.postFetch);\r\n\r\n    const dispatchCheckUser=()=> {\r\n        if(userInfo.hasOwnProperty('userLogged')) {\r\n            setUserLogged(userInfo.userLogged);\r\n            setUserType(userInfo.userLogged.userType);  \r\n        }\r\n        else {\r\n            setUserType(trainer_user_type);\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        dispatchHead();\r\n        dispatchCheckUser();\r\n    },[]);\r\n\r\n    const dispatchHead=()=> {\r\n        dispatch(fetchHeader(getHeader));\r\n    }\r\n\r\n    const getHead = useSelector(state => state.header);\r\n\r\n    const getPaths=()=> {\r\n        if(getHead.hasOwnProperty('data')) {\r\n            let paths = getHead.data.paths.map((data, index)=> {\r\n                return(\r\n                    <span className={data.class} key={index}></span>\r\n                )\r\n            });\r\n            return paths;\r\n        }\r\n    }\r\n\r\n    const getCredentials=()=> {\r\n        console.log(\"User Logged Details: \", userLoggedDetails);\r\n        if(userLoggedDetails) {      \r\n            return(\r\n                <span>\r\n                    <span className=\"name\">\r\n                        {userLoggedDetails.fullName}\r\n                    </span>\r\n                    <span className=\"email\">\r\n                        {userLoggedDetails.email}\r\n                    </span>\r\n                </span>\r\n            )       \r\n        }\r\n    }\r\n\r\n    const getDropDownItems=()=> {\r\n        if(getHead.hasOwnProperty('data')) {\r\n            let drops = getHead.data.dropdown.map((data, index)=> {\r\n                return(\r\n                    <DropdownItem key={index} onClick={()=>routeTo(data.route)}>\r\n                        <i className={data.iconClass}></i>\r\n                        {data.title}\r\n                    </DropdownItem>\r\n                )\r\n            });\r\n            return drops;\r\n        }\r\n    }\r\n\r\n    const routeTo=(location)=> {\r\n        props.history.push(location);\r\n    }\r\n\r\n    const logout=()=> {\r\n        dispatch(getFetch(user_logout));\r\n    }\r\n\r\n    const logUser = useSelector(state => state.getApi);\r\n\r\n    if(logUser.hasOwnProperty('logout')) {\r\n        if(logUser.logout.status === fine_res) {\r\n            props.history.push(\"/signup\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile-actions d-flex align-items-center justify-content-end\">\r\n            {userType === trainer_user_type ?  \r\n            <div className=\"user-notification-wrapper\">\r\n                <span className=\"icon-Group-22380\">\r\n                   {getPaths()}\r\n                </span>\r\n            </div>\r\n            : '' }  \r\n            <Dropdown className=\"profile-dropdown\" isOpen={dropdownOpen} size=\"sm\" toggle={toggle}>\r\n                    <DropdownToggle>\r\n                        <div className=\"user-profile\">\r\n                            <span className=\"dp-wrapper\">\r\n                                <img src={dp} alt=\"user-dp\" />\r\n                            </span>\r\n                            <span className=\"credentials\">\r\n                                {getCredentials()}\r\n                            </span>\r\n                            {userType === trainer_user_type ?               \r\n                            <i className=\"icon-chevron-down\"></i> \r\n                            : '' }\r\n                        </div>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        {getDropDownItems()}\r\n                    </DropdownMenu>\r\n            </Dropdown>\r\n            {userType === trainer_user_type ? ''\r\n                : \r\n                <span className=\"name user-logout\" style={{color: \"#fff\"}} onClick={()=>logout()}>\r\n                    <i className=\"icon-logout name\"></i>LogOut\r\n                </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header);","D:\\D\\Freelance\\tunnin-web\\src\\actions\\getFetch.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\earnings.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\userProfile.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\settings.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\ratingReview.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\payouts.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\components\\Login\\LoginForm.jsx",["645","646","647","648","649","650","651"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport ModalPopup from './ModalPopup';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { updateModal } from '../../actions/updateModal';\r\nimport { postFetch } from '../../actions/postFetch';\r\n\r\n// Constants\r\nimport { get_auth, notification_route } from '../../constants/constants';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Style\r\nimport '../../styles/login.scss';\r\nimport { fine_res } from '../../constants/api_env';\r\n\r\nfunction LoginForm(props) {\r\n\r\n    const [loginForm, setForm] = useState({});\r\n    const [modalData, setModalData] = useState({});\r\n\r\n    useEffect(() => {\r\n        setFormData();\r\n    }, []);\r\n\r\n\r\n    const setFormData=()=> {\r\n        setForm(props.formData);\r\n    }\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [datacall, setDataCall] = useState({});\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n        dispatch(updateModal('forgot'));\r\n    }\r\n\r\n    const modalState = useSelector(state => state.updateModal);\r\n\r\n\r\n    const getDataFromChild = (val) => {\r\n        callAgain(val);\r\n    }\r\n\r\n    const callAgain = (data) => {\r\n        setDataCall(data);\r\n    }\r\n\r\n    const routeSignUp=()=> {\r\n        props.history.push('/signup');\r\n    }\r\n\r\n    const getFormData = () => {\r\n        if (Object.keys(loginForm).length > 0) {\r\n            return (\r\n                <div className=\"login-form\">\r\n                    <h2 className=\"login-form-heading\">\r\n                        {loginForm.welcomeText}\r\n                    </h2>\r\n                    <p className=\"login-form-note\">\r\n                        {loginForm.loginNote}\r\n                    </p>\r\n                    <Form >\r\n                        <FormGroup className=\"custom-input-wrapper\">\r\n                            <Label for=\"exampleEmail\">{loginForm.email}</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"dodgeui2020@gmail.com\" onChange={(e)=>handleChange('username', e.target.value)}/>\r\n                            <span className=\"input-icons\"><i className=\"icon-mail\"></i></span>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"custom-input-wrapper\">\r\n                            <Label for=\"examplePassword\">{loginForm.password}</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"***************\" onChange={(e)=>handleChange('password', e.target.value)} />\r\n                            <span className=\"input-icons\"><i className=\"icon-lock-unlock\"></i></span>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"d-flex justify-content-between align-items-center mb-5\" check >\r\n                            <Label className=\"tunnin-checkbox\" check>\r\n                                <Input type=\"checkbox\" /> {loginForm.remember}\r\n                            </Label>\r\n                            <Label check>\r\n                                <a className=\"tunnin-link\" href=\"#\" onClick={()=>toggle}>{loginForm.forgot}</a>\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"text-center\">\r\n                            <Button color=\"primary\" size=\"lg\" onClick={()=>userLogin()}>{loginForm.loginBtn}</Button>\r\n                            <p className=\"text-grey mt-3\">Don’t have an account? <a className=\"tunnin-link\" onClick={()=>routeSignUp()}>SIGNUP</a></p>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <ModalPopup isOpen={modal} loginData={modalState} sendData={getDataFromChild} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    let form = {};\r\n\r\n    const handleChange=(field, data)=> {\r\n        form[field] = data;\r\n    }\r\n\r\n    const userLogin=()=> {\r\n        if(Object.keys(form).length == 2) {\r\n            dispatch(postFetch(get_auth, form));\r\n        }    \r\n    }\r\n\r\n    const userInfo = useSelector(state => state.postFetch);\r\n    \r\n    if (userInfo.hasOwnProperty('userLogged')) {\r\n        if (userInfo.userLoginStatus === fine_res) {\r\n            props.history.push(notification_route);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {getFormData()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Settings\\Sidebar.jsx",["652","653","654","655","656","657","658","659","660","661","662","663","664","665","666"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Row, Col, Card, CardText, CardBody, CardLink,\r\n    CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settingsSidebar } from '../../actions/settingSidebar';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { setting_sidebar } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/notifications.scss';\r\n\r\nfunction SettingSidebar(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchSidebar();\r\n    }, []);\r\n\r\n\r\n    const dispatchSidebar = () => {\r\n        dispatch(settingsSidebar(setting_sidebar));\r\n    }\r\n\r\n    const getSideList = useSelector(state => state.SettingsSidebar);\r\n    \r\n    const getList=()=> {\r\n        if(getSideList.hasOwnProperty('sidebar')) {\r\n            let sideList = getSideList.sidebar.map((data, index)=> {\r\n                return(\r\n                    <li key={index} className=\"list\" onClick={()=>routeTo(data.route)}>\r\n                        <i className={data.iconClass}></i>{data.title}\r\n                    </li>\r\n                )\r\n            });\r\n            return sideList;\r\n        }\r\n    }\r\n\r\n    const routeTo=(location)=> {\r\n        props.history.push(location);\r\n    }\r\n\r\n    return(\r\n        <div className=\"settings-left-container\">\r\n            <ul>\r\n                {getList()}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(SettingSidebar);","D:\\D\\Freelance\\tunnin-web\\src\\components\\Sidebar\\Sidebar.jsx",["667","668","669","670","671","672","673","674","675","676","677","678","679","680","681"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Row, Col, Card, CardText, CardBody, CardLink,\r\n    CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { ListNotification } from '../../actions/notification';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { listed_notification } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/notifications.scss';\r\n\r\nfunction Sidebar(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const getNotification = useSelector(state => state.notification);\r\n\r\n    useEffect(() => {\r\n        dispatchNotification();\r\n    }, []);\r\n\r\n    const dispatchNotification=()=> {\r\n        dispatch(ListNotification(listed_notification));\r\n    }\r\n\r\n    const routeTo=(location)=> {\r\n        props.history.push(location);\r\n    }\r\n\r\n    const getSidebar=()=> {\r\n        if(getNotification.hasOwnProperty('data')) {\r\n            let lists = getNotification.data.sideList;\r\n            let sidebar = lists.map((data, index)=> {\r\n                return(\r\n                    <li key={index} className=\"list\" onClick={()=>routeTo(data.route)}>\r\n                        <i className={data.icon}></i>{data.name}\r\n                    </li>\r\n                )\r\n            })\r\n            return sidebar;\r\n        }       \r\n    }\r\n\r\n    return(\r\n        <ul>\r\n            {getSidebar()}\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Sidebar);","D:\\D\\Freelance\\tunnin-web\\src\\actions\\earningDetails.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\sessionModal.js",["682","683","684","685"],"import localData from '../Data/Data.json';\r\n\r\n// Constants\r\nimport { add_session_modal, cancel_session_modal, cancelled_session_modal, close_modal } from '../constants/constants';\r\n\r\nexport const sessionModal=(type)=> {\r\n    if(type == add_session_modal) {\r\n        return {\r\n            type: add_session_modal,\r\n            payload: localData.sessionModal.addedSession\r\n        }\r\n    }\r\n    else if(type == cancel_session_modal) {\r\n        return {\r\n            type: cancel_session_modal,\r\n            payload: localData.sessionModal.cancelSession\r\n        }\r\n    }\r\n    else if(type == cancelled_session_modal ) {\r\n        return {\r\n            type: cancelled_session_modal,\r\n            payload: localData.sessionModal.cancelledSession\r\n        }\r\n    }\r\n    else if(type == close_modal) {\r\n        return {\r\n            type: close_modal\r\n        }\r\n    }\r\n}\r\n\r\n","D:\\D\\Freelance\\tunnin-web\\src\\actions\\sessionDetail.js",["686"],"import localData from '../Data/Data.json';\r\n\r\n// Constants\r\nimport { session_details, session_past_details } from '../constants/constants';\r\n\r\nexport const sessionDetails=(type)=> {\r\n    if(type === session_details) {\r\n        return {\r\n            type: session_details,\r\n            payload: localData.sessionDetails,\r\n        }\r\n    }\r\n    else {\r\n        let pastData = JSON.parse(JSON.stringify(localData.sessionDetails));\r\n        let btns = pastData.btns;\r\n        for(let i=0; i<btns.length; i++) {\r\n            btns[i].flag = !btns[i].flag;\r\n        }\r\n        return {\r\n            type: session_details,\r\n            payload: pastData\r\n        }\r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\actions\\Signup.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\addSession.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\cancelPolicy.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\addedSession.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\profileFace.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\uploadedFile.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\postFetch.js",["687"],"// Constants\r\nimport { url, fine_res } from '../constants/api_env';\r\nimport { user_logged_in } from '../constants/constants';\r\n// axios\r\nimport axios from 'axios';\r\n\r\nexport const postFetch = (dataType, params) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await axios.post((url+dataType), params);\r\n            if (res.status === fine_res) {\r\n                let { data } = res.data;\r\n                dispatch({\r\n                    type: dataType,\r\n                    payload: data,\r\n                    status: res.status\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(\"Complete Err: \", error.response);\r\n            dispatch({\r\n                type: dataType,\r\n                payload: error.response,\r\n            });\r\n        }\r\n    }\r\n}\r\n","D:\\D\\Freelance\\tunnin-web\\src\\actions\\connectBank.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\updateModal.js",["688","689","690","691"],"import axios from 'axios';\r\nimport localData from '../Data/Data.json';\r\n\r\nexport const updateModal = (typeModal) => {\r\n    if(typeModal == 'forgot') {\r\n        return {\r\n            type: 'forgotPassword',\r\n            payload: localData.forgotPassword\r\n        }\r\n    }\r\n    else if(typeModal == 'reset') {\r\n        return {\r\n            type: 'resetPassword',\r\n            payload: localData.resetPassword\r\n        }\r\n    }\r\n    else if(typeModal == 'close') {\r\n        return {\r\n            type: 'closeModal',\r\n            payload: localData.signUp\r\n        }\r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\actions\\signupBank.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\header.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\components\\Session\\Popup.jsx",["692","693"],"import React, { useState }  from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { sessionModal } from '../../actions/sessionModal';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { close_modal, add_session_modal, cancelled_session_modal } from '../../constants/constants';\r\n\r\nimport done from '../../images/done.png';\r\n\r\n\r\nfunction Popup(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [cancelAction, cancelled] = useState('');    \r\n\r\n    const modalOperate=(item)=> {\r\n        console.log(\"Item: \", item);\r\n        if(item.hasOwnProperty(\"action\")) {\r\n            if(item.action === \"yes\") {\r\n                dispatch(sessionModal(close_modal));\r\n                cancelled(\"yes\");\r\n                dispatch(sessionModal(cancelled_session_modal));\r\n            }\r\n            else {\r\n                dispatch(sessionModal(close_modal));\r\n            }\r\n        }\r\n        else if(item.hasOwnProperty(\"route\")) {\r\n            dispatch(sessionModal(close_modal));\r\n            props.history.push(item.route);\r\n        }\r\n        else {\r\n            dispatch(sessionModal(close_modal));\r\n            if(props.action_type == add_session_modal) {\r\n                let routeTo = item.route;\r\n                props.history.push(routeTo);\r\n            }\r\n        }\r\n    }\r\n\r\n    const getButton=(data)=> {\r\n        let btn = data.btn.map((item, index)=> {\r\n            return(\r\n                <Button color=\"primary\" key={index} onClick={()=>modalOperate(item)}>\r\n                    {item.title}\r\n                </Button>\r\n            )\r\n        })\r\n        return btn;\r\n    }\r\n\r\n    const popup = useSelector(state => state.sessionModal);\r\n\r\n    const getModal=()=> {  \r\n        return(\r\n            <Modal className=\"tunnin-popup modal-dialog-centered\" isOpen={popup.hasOwnProperty(\"popUp\") ? popup.popUp : props.modalState.popUp}>\r\n                <div className=\"text-center\">\r\n                    <img src={done} alt=\"Reset Password\" />\r\n                </div>\r\n                <ModalHeader className=\"border-0 justify-content-center pb-0\">\r\n                    {popup.hasOwnProperty(\"title\") ? popup.title : props.modalState.modalState.title}\r\n                </ModalHeader>\r\n                <ModalBody className=\"justify-content-center\" >\r\n                    <p className=\"text-center opacity-69\">\r\n                        {popup.hasOwnProperty(\"content\") ? popup.content : props.modalState.modalState.content}\r\n                    </p>\r\n                </ModalBody>\r\n                <ModalFooter className=\"border-0 justify-content-center\">\r\n                    {getButton(popup.hasOwnProperty(\"btn\") ? popup.btn : props.modalState.modalState)}\r\n                </ModalFooter>\r\n            </Modal>\r\n        );      \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {getModal()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Popup);","D:\\D\\Freelance\\tunnin-web\\src\\constants\\api_env.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\settingSidebar.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\components\\Login\\ModalPopup.jsx",["694","695"],"import React from 'react';\r\nimport { Form, FormGroup, Label, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport verify from '../../images/verify-email.png';\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { updateModal } from '../../actions/updateModal';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Style\r\nimport '../../styles/login.scss';\r\n\r\n\r\nfunction ModalPopup(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const updateData = () => {\r\n        dispatch(updateModal('reset'));\r\n    }\r\n\r\n    const modalState = useSelector(state => state.updateModal);\r\n\r\n    const closeModal=()=> {\r\n        dispatch(updateModal('close'));\r\n        props.history.push('/create-account');\r\n    }\r\n\r\n    \r\n\r\n    const handleChange=(data)=> {\r\n        props.sendData(data);\r\n    }\r\n\r\n    const getModal = () => {\r\n        if (Object.keys(props.loginData).length > 0) {\r\n            let data = props.loginData.modalState;\r\n            if(props.loginData.popUp == false) {\r\n                //props.onChange(props.loginData);\r\n                handleChange(props.loginData);\r\n            }\r\n            return (\r\n                <Modal className=\"forgot-password-popup modal-dialog-centered\" isOpen={props.loginData.popUp} onChange={handleChange}>\r\n                    {data.hasOwnProperty('text') ?\r\n                    <div className=\"text-center\">\r\n                        <img src={verify} alt=\"Reset Password\" />\r\n                    </div>\r\n                    :\r\n                    <div></div>\r\n                    }\r\n                    <ModalHeader className=\"border-0 justify-content-center pb-0\" >{data.heading}</ModalHeader>\r\n                    <ModalBody className=\"pt-1\">\r\n                        <Form>\r\n                            {data.hasOwnProperty('text') ?\r\n                                <FormGroup>\r\n                                    <p className=\"text-center verify-text\">\r\n                                        {data.text}\r\n                                    </p>\r\n                                </FormGroup>\r\n                                :\r\n                                <FormGroup className=\"custom-input-wrapper\">\r\n                                    <p className=\"text-center mb-5\">Please enter your email address</p>\r\n                                    <Label for=\"exampleEmail\">{data.email}</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"dodgeui2020@gmail.com\" />\r\n                                    <span className=\"input-icons\"><i className=\"icon-mail\"></i></span>\r\n                                </FormGroup>\r\n\r\n                            }\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter className=\"border-0 justify-content-center\">\r\n                        {data.hasOwnProperty('text') ?\r\n                            <Button color=\"primary\" onClick={() => closeModal()}>Ok</Button>\r\n                            :\r\n                            <Button color=\"primary\" onClick={() => updateData()}>Send</Button>\r\n                        }\r\n                    </ModalFooter>\r\n                </Modal>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {getModal()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ModalPopup);","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\getApi.js",["696"],"// Constants\r\nimport { user_logout, upcoming_session, agora_key } from '../constants/constants';\r\n\r\nconst initialState = {\r\n\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case user_logout:\r\n            return {\r\n                ...state,\r\n                logout: actions.payload\r\n            }\r\n        case upcoming_session:\r\n            return {\r\n                ...state,\r\n                upcomingSession: actions.payload\r\n            }\r\n        case agora_key:\r\n            return {\r\n                ...state,\r\n                agoraObj: actions.payload\r\n            }            \r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\components\\Agora\\Channel.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\components\\Agora\\Call.js",["697","698","699"],"D:\\D\\Freelance\\tunnin-web\\src\\components\\Agora\\App.js",["700","701","702"],"import React, { useEffect, useState } from 'react';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { getFetchParam } from '../../actions/getFetchParam';\r\n\r\n// Constant\r\nimport { agora_key, upcoming_session } from '../../constants/constants';\r\n\r\nimport Call from \"./Call\";\r\n\r\nfunction App(props) {\r\n\r\n    const [status, setStatus] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const channel = useSelector(state => state.postFetch);\r\n\r\n    console.log(\"Channel\", channel);\r\n\r\n    let sessionId = props.sessionId;\r\n\r\n    useEffect(() => {\r\n        getChannel();\r\n    });\r\n\r\n    const getChannel=()=> {   \r\n        dispatch(getFetchParam(agora_key, sessionId));      \r\n    }\r\n\r\n    console.log(\"Props: \", props);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Call />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;","D:\\D\\Freelance\\tunnin-web\\src\\components\\Agora\\AudioVideo.jsx",["703","704","705"],"import React, { useState } from 'react';\r\nimport {\r\n    Button, Row, Col\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Styles\r\nimport '../../styles/notifications.scss';\r\n\r\n// Components\r\nimport WebcamComponent from './WebCam';\r\nimport Mic from './Mic';\r\nimport Header from '../Header/Header';\r\nimport App from '../Agora/App';\r\n\r\n// image\r\nimport start_session_img from '../../images/start-session-img.png';\r\n\r\nfunction AudioVideo(props) {\r\n\r\n    const [status, setStatus] = useState(false);\r\n\r\n    const startSession = () => {\r\n        setStatus(!status);\r\n    }\r\n\r\n    let sessionId = props.location.sessionRes._id;\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col sm=\"12\" className={status ? \"session-user-right-container audio-video-container session-started\" : \"session-user-right-container audio-video-container\"}>\r\n                        <p className=\"title\">\r\n                            <i className=\"icon-chevron-left\" onClick={() => props.history.goBack()}></i>\r\n                            Test Audio & Video\r\n                        </p>\r\n                        {status ?\r\n                            <App sessionId={sessionId} />\r\n                            :\r\n                            <div>\r\n                                <WebcamComponent />\r\n                                <Mic />\r\n                            </div>\r\n                        }\r\n                        <div className=\"start-session-btn-wrapper\">\r\n                            {status ?\r\n                                <Button className=\"start-session-btn\" onClick={() => startSession()}>\r\n                                    End Session\r\n                                </Button>\r\n                                :\r\n                                <Button className=\"start-session-btn\" onClick={() => startSession()}>\r\n                                    Start Session\r\n                                </Button>\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(AudioVideo);","D:\\D\\Freelance\\tunnin-web\\src\\reducer\\patchApi.js",["706"],"// Constants\r\nimport { agora_key } from '../constants/constants';\r\n\r\nconst initialState = {\r\n    \r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case agora_key:\r\n            return {\r\n                ...state,\r\n                agoraRes: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\Freelance\\tunnin-web\\src\\actions\\patchApi.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\actions\\getFetchParam.js",[],"D:\\D\\Freelance\\tunnin-web\\src\\components\\Agora\\WebCam.jsx",[],"D:\\D\\Freelance\\tunnin-web\\src\\components\\Agora\\Mic.jsx",[],{"ruleId":"707","replacedBy":"708"},{"ruleId":"709","replacedBy":"710"},{"ruleId":"711","severity":1,"message":"712","line":4,"column":8,"nodeType":"713","messageId":"714","endLine":4,"endColumn":12},{"ruleId":"711","severity":1,"message":"715","line":14,"column":8,"nodeType":"713","messageId":"714","endLine":14,"endColumn":12},{"ruleId":"716","severity":1,"message":"717","line":10,"column":1,"nodeType":"718","endLine":20,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":5,"column":1,"nodeType":"718","endLine":15,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":10,"column":1,"nodeType":"718","endLine":20,"endColumn":2},{"ruleId":"711","severity":1,"message":"719","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":26},{"ruleId":"711","severity":1,"message":"720","line":3,"column":23,"nodeType":"713","messageId":"714","endLine":3,"endColumn":27},{"ruleId":"711","severity":1,"message":"721","line":3,"column":29,"nodeType":"713","messageId":"714","endLine":3,"endColumn":37},{"ruleId":"711","severity":1,"message":"722","line":3,"column":39,"nodeType":"713","messageId":"714","endLine":3,"endColumn":48},{"ruleId":"711","severity":1,"message":"723","line":7,"column":23,"nodeType":"713","messageId":"714","endLine":7,"endColumn":34},{"ruleId":"711","severity":1,"message":"724","line":10,"column":10,"nodeType":"713","messageId":"714","endLine":10,"endColumn":22},{"ruleId":"711","severity":1,"message":"725","line":24,"column":8,"nodeType":"713","messageId":"714","endLine":24,"endColumn":23},{"ruleId":"711","severity":1,"message":"726","line":32,"column":11,"nodeType":"713","messageId":"714","endLine":32,"endColumn":19},{"ruleId":"711","severity":1,"message":"727","line":33,"column":12,"nodeType":"713","messageId":"714","endLine":33,"endColumn":21},{"ruleId":"711","severity":1,"message":"728","line":33,"column":23,"nodeType":"713","messageId":"714","endLine":33,"endColumn":35},{"ruleId":"716","severity":1,"message":"717","line":10,"column":1,"nodeType":"718","endLine":20,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":8,"column":1,"nodeType":"718","endLine":18,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":10,"column":1,"nodeType":"718","endLine":20,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":13,"column":1,"nodeType":"718","endLine":29,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":8,"column":1,"nodeType":"718","endLine":18,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":13,"column":1,"nodeType":"718","endLine":24,"endColumn":2},{"ruleId":"711","severity":1,"message":"729","line":2,"column":23,"nodeType":"713","messageId":"714","endLine":2,"endColumn":36},{"ruleId":"716","severity":1,"message":"717","line":10,"column":1,"nodeType":"718","endLine":20,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":8,"column":1,"nodeType":"718","endLine":18,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":13,"column":1,"nodeType":"718","endLine":28,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":10,"column":1,"nodeType":"718","endLine":20,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":8,"column":1,"nodeType":"718","endLine":18,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":8,"column":1,"nodeType":"718","endLine":18,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":7,"column":1,"nodeType":"718","endLine":29,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":8,"column":1,"nodeType":"718","endLine":18,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":8,"column":1,"nodeType":"718","endLine":18,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":8,"column":1,"nodeType":"718","endLine":18,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":8,"column":1,"nodeType":"718","endLine":23,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":13,"column":1,"nodeType":"718","endLine":28,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":10,"column":1,"nodeType":"718","endLine":20,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":10,"column":1,"nodeType":"718","endLine":38,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":10,"column":1,"nodeType":"718","endLine":20,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":10,"column":1,"nodeType":"718","endLine":20,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":8,"column":1,"nodeType":"718","endLine":31,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":18,"column":1,"nodeType":"718","endLine":58,"endColumn":2},{"ruleId":"716","severity":1,"message":"717","line":10,"column":1,"nodeType":"718","endLine":32,"endColumn":2},{"ruleId":"711","severity":1,"message":"730","line":1,"column":8,"nodeType":"713","messageId":"714","endLine":1,"endColumn":13},{"ruleId":"711","severity":1,"message":"731","line":31,"column":23,"nodeType":"713","messageId":"714","endLine":31,"endColumn":31},{"ruleId":"732","severity":1,"message":"733","line":60,"column":7,"nodeType":"734","endLine":60,"endColumn":9,"suggestions":"735"},{"ruleId":"711","severity":1,"message":"736","line":154,"column":11,"nodeType":"713","messageId":"714","endLine":154,"endColumn":20},{"ruleId":"711","severity":1,"message":"737","line":11,"column":12,"nodeType":"713","messageId":"714","endLine":11,"endColumn":19},{"ruleId":"732","severity":1,"message":"738","line":17,"column":8,"nodeType":"734","endLine":17,"endColumn":10,"suggestions":"739"},{"ruleId":"711","severity":1,"message":"740","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":25},{"ruleId":"711","severity":1,"message":"741","line":3,"column":10,"nodeType":"713","messageId":"714","endLine":3,"endColumn":13},{"ruleId":"711","severity":1,"message":"742","line":3,"column":15,"nodeType":"713","messageId":"714","endLine":3,"endColumn":18},{"ruleId":"711","severity":1,"message":"743","line":3,"column":20,"nodeType":"713","messageId":"714","endLine":3,"endColumn":25},{"ruleId":"711","severity":1,"message":"744","line":3,"column":27,"nodeType":"713","messageId":"714","endLine":3,"endColumn":32},{"ruleId":"732","severity":1,"message":"745","line":35,"column":8,"nodeType":"734","endLine":35,"endColumn":10,"suggestions":"746"},{"ruleId":"732","severity":1,"message":"747","line":29,"column":8,"nodeType":"734","endLine":29,"endColumn":10,"suggestions":"748"},{"ruleId":"749","severity":1,"message":"750","line":121,"column":36,"nodeType":"751","messageId":"752","endLine":121,"endColumn":38},{"ruleId":"711","severity":1,"message":"740","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":25},{"ruleId":"711","severity":1,"message":"741","line":3,"column":10,"nodeType":"713","messageId":"714","endLine":3,"endColumn":13},{"ruleId":"711","severity":1,"message":"742","line":3,"column":15,"nodeType":"713","messageId":"714","endLine":3,"endColumn":18},{"ruleId":"711","severity":1,"message":"744","line":3,"column":27,"nodeType":"713","messageId":"714","endLine":3,"endColumn":32},{"ruleId":"732","severity":1,"message":"753","line":28,"column":8,"nodeType":"734","endLine":28,"endColumn":10,"suggestions":"754"},{"ruleId":"711","severity":1,"message":"740","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":25},{"ruleId":"711","severity":1,"message":"744","line":3,"column":37,"nodeType":"713","messageId":"714","endLine":3,"endColumn":42},{"ruleId":"711","severity":1,"message":"755","line":8,"column":10,"nodeType":"713","messageId":"714","endLine":8,"endColumn":22},{"ruleId":"732","severity":1,"message":"756","line":34,"column":8,"nodeType":"734","endLine":34,"endColumn":10,"suggestions":"757"},{"ruleId":"732","severity":1,"message":"758","line":30,"column":8,"nodeType":"734","endLine":30,"endColumn":10,"suggestions":"759"},{"ruleId":"732","severity":1,"message":"760","line":30,"column":8,"nodeType":"734","endLine":30,"endColumn":10,"suggestions":"761"},{"ruleId":"711","severity":1,"message":"762","line":38,"column":12,"nodeType":"713","messageId":"714","endLine":38,"endColumn":16},{"ruleId":"711","severity":1,"message":"763","line":38,"column":18,"nodeType":"713","messageId":"714","endLine":38,"endColumn":25},{"ruleId":"711","severity":1,"message":"764","line":39,"column":12,"nodeType":"713","messageId":"714","endLine":39,"endColumn":20},{"ruleId":"732","severity":1,"message":"765","line":58,"column":8,"nodeType":"734","endLine":58,"endColumn":10,"suggestions":"766"},{"ruleId":"749","severity":1,"message":"767","line":186,"column":58,"nodeType":"751","messageId":"752","endLine":186,"endColumn":60},{"ruleId":"749","severity":1,"message":"750","line":189,"column":40,"nodeType":"751","messageId":"752","endLine":189,"endColumn":42},{"ruleId":"711","severity":1,"message":"768","line":13,"column":10,"nodeType":"713","messageId":"714","endLine":13,"endColumn":20},{"ruleId":"711","severity":1,"message":"769","line":25,"column":8,"nodeType":"713","messageId":"714","endLine":25,"endColumn":10},{"ruleId":"732","severity":1,"message":"770","line":33,"column":8,"nodeType":"734","endLine":33,"endColumn":10,"suggestions":"771"},{"ruleId":"711","severity":1,"message":"744","line":3,"column":27,"nodeType":"713","messageId":"714","endLine":3,"endColumn":32},{"ruleId":"711","severity":1,"message":"772","line":30,"column":12,"nodeType":"713","messageId":"714","endLine":30,"endColumn":19},{"ruleId":"732","severity":1,"message":"773","line":34,"column":8,"nodeType":"734","endLine":34,"endColumn":10,"suggestions":"774"},{"ruleId":"711","severity":1,"message":"775","line":18,"column":71,"nodeType":"713","messageId":"714","endLine":18,"endColumn":94},{"ruleId":"711","severity":1,"message":"769","line":27,"column":8,"nodeType":"713","messageId":"714","endLine":27,"endColumn":10},{"ruleId":"732","severity":1,"message":"776","line":38,"column":8,"nodeType":"734","endLine":38,"endColumn":10,"suggestions":"777"},{"ruleId":"749","severity":1,"message":"750","line":96,"column":17,"nodeType":"751","messageId":"752","endLine":96,"endColumn":19},{"ruleId":"711","severity":1,"message":"778","line":24,"column":8,"nodeType":"713","messageId":"714","endLine":24,"endColumn":16},{"ruleId":"732","severity":1,"message":"779","line":37,"column":8,"nodeType":"734","endLine":37,"endColumn":10,"suggestions":"780"},{"ruleId":"781","severity":1,"message":"782","line":121,"column":25,"nodeType":"783","endLine":121,"endColumn":86},{"ruleId":"781","severity":1,"message":"782","line":125,"column":29,"nodeType":"783","endLine":125,"endColumn":89},{"ruleId":"711","severity":1,"message":"740","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":25},{"ruleId":"711","severity":1,"message":"784","line":3,"column":5,"nodeType":"713","messageId":"714","endLine":3,"endColumn":11},{"ruleId":"711","severity":1,"message":"785","line":3,"column":13,"nodeType":"713","messageId":"714","endLine":3,"endColumn":17},{"ruleId":"711","severity":1,"message":"786","line":3,"column":19,"nodeType":"713","messageId":"714","endLine":3,"endColumn":28},{"ruleId":"711","severity":1,"message":"743","line":3,"column":30,"nodeType":"713","messageId":"714","endLine":3,"endColumn":35},{"ruleId":"711","severity":1,"message":"744","line":3,"column":37,"nodeType":"713","messageId":"714","endLine":3,"endColumn":42},{"ruleId":"711","severity":1,"message":"787","line":3,"column":70,"nodeType":"713","messageId":"714","endLine":3,"endColumn":78},{"ruleId":"711","severity":1,"message":"788","line":3,"column":80,"nodeType":"713","messageId":"714","endLine":3,"endColumn":88},{"ruleId":"711","severity":1,"message":"789","line":4,"column":16,"nodeType":"713","messageId":"714","endLine":4,"endColumn":28},{"ruleId":"732","severity":1,"message":"790","line":34,"column":8,"nodeType":"734","endLine":34,"endColumn":10,"suggestions":"791"},{"ruleId":"749","severity":1,"message":"767","line":172,"column":66,"nodeType":"751","messageId":"752","endLine":172,"endColumn":68},{"ruleId":"749","severity":1,"message":"750","line":183,"column":66,"nodeType":"751","messageId":"752","endLine":183,"endColumn":68},{"ruleId":"711","severity":1,"message":"720","line":2,"column":27,"nodeType":"713","messageId":"714","endLine":2,"endColumn":31},{"ruleId":"711","severity":1,"message":"721","line":2,"column":33,"nodeType":"713","messageId":"714","endLine":2,"endColumn":41},{"ruleId":"711","severity":1,"message":"722","line":3,"column":5,"nodeType":"713","messageId":"714","endLine":3,"endColumn":14},{"ruleId":"732","severity":1,"message":"792","line":30,"column":8,"nodeType":"734","endLine":30,"endColumn":10,"suggestions":"793"},{"ruleId":"711","severity":1,"message":"740","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":25},{"ruleId":"711","severity":1,"message":"784","line":3,"column":5,"nodeType":"713","messageId":"714","endLine":3,"endColumn":11},{"ruleId":"732","severity":1,"message":"794","line":32,"column":8,"nodeType":"734","endLine":32,"endColumn":10,"suggestions":"795"},{"ruleId":"711","severity":1,"message":"740","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":25},{"ruleId":"711","severity":1,"message":"784","line":3,"column":5,"nodeType":"713","messageId":"714","endLine":3,"endColumn":11},{"ruleId":"732","severity":1,"message":"794","line":32,"column":8,"nodeType":"734","endLine":32,"endColumn":10,"suggestions":"796"},{"ruleId":"711","severity":1,"message":"720","line":3,"column":54,"nodeType":"713","messageId":"714","endLine":3,"endColumn":58},{"ruleId":"711","severity":1,"message":"721","line":3,"column":60,"nodeType":"713","messageId":"714","endLine":3,"endColumn":68},{"ruleId":"711","severity":1,"message":"787","line":3,"column":70,"nodeType":"713","messageId":"714","endLine":3,"endColumn":78},{"ruleId":"711","severity":1,"message":"788","line":3,"column":80,"nodeType":"713","messageId":"714","endLine":3,"endColumn":88},{"ruleId":"711","severity":1,"message":"722","line":4,"column":5,"nodeType":"713","messageId":"714","endLine":4,"endColumn":14},{"ruleId":"711","severity":1,"message":"789","line":4,"column":16,"nodeType":"713","messageId":"714","endLine":4,"endColumn":28},{"ruleId":"797","severity":1,"message":"798","line":96,"column":25,"nodeType":"783","endLine":96,"endColumn":48},{"ruleId":"749","severity":1,"message":"767","line":156,"column":58,"nodeType":"751","messageId":"752","endLine":156,"endColumn":60},{"ruleId":"732","severity":1,"message":"799","line":30,"column":8,"nodeType":"734","endLine":30,"endColumn":10,"suggestions":"800"},{"ruleId":"711","severity":1,"message":"740","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":25},{"ruleId":"711","severity":1,"message":"784","line":3,"column":5,"nodeType":"713","messageId":"714","endLine":3,"endColumn":11},{"ruleId":"732","severity":1,"message":"794","line":32,"column":8,"nodeType":"734","endLine":32,"endColumn":10,"suggestions":"801"},{"ruleId":"711","severity":1,"message":"740","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":25},{"ruleId":"732","severity":1,"message":"794","line":32,"column":8,"nodeType":"734","endLine":32,"endColumn":10,"suggestions":"802"},{"ruleId":"711","severity":1,"message":"740","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":25},{"ruleId":"711","severity":1,"message":"720","line":3,"column":54,"nodeType":"713","messageId":"714","endLine":3,"endColumn":58},{"ruleId":"711","severity":1,"message":"721","line":3,"column":60,"nodeType":"713","messageId":"714","endLine":3,"endColumn":68},{"ruleId":"711","severity":1,"message":"787","line":3,"column":70,"nodeType":"713","messageId":"714","endLine":3,"endColumn":78},{"ruleId":"711","severity":1,"message":"788","line":3,"column":80,"nodeType":"713","messageId":"714","endLine":3,"endColumn":88},{"ruleId":"711","severity":1,"message":"722","line":4,"column":5,"nodeType":"713","messageId":"714","endLine":4,"endColumn":14},{"ruleId":"711","severity":1,"message":"789","line":4,"column":16,"nodeType":"713","messageId":"714","endLine":4,"endColumn":28},{"ruleId":"732","severity":1,"message":"794","line":33,"column":8,"nodeType":"734","endLine":33,"endColumn":10,"suggestions":"803"},{"ruleId":"711","severity":1,"message":"740","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":25},{"ruleId":"711","severity":1,"message":"784","line":3,"column":5,"nodeType":"713","messageId":"714","endLine":3,"endColumn":11},{"ruleId":"732","severity":1,"message":"794","line":36,"column":8,"nodeType":"734","endLine":36,"endColumn":10,"suggestions":"804"},{"ruleId":"749","severity":1,"message":"750","line":7,"column":13,"nodeType":"751","messageId":"752","endLine":7,"endColumn":15},{"ruleId":"749","severity":1,"message":"750","line":13,"column":18,"nodeType":"751","messageId":"752","endLine":13,"endColumn":20},{"ruleId":"711","severity":1,"message":"805","line":2,"column":25,"nodeType":"713","messageId":"714","endLine":2,"endColumn":36},{"ruleId":"711","severity":1,"message":"806","line":18,"column":11,"nodeType":"713","messageId":"714","endLine":18,"endColumn":17},{"ruleId":"711","severity":1,"message":"727","line":21,"column":12,"nodeType":"713","messageId":"714","endLine":21,"endColumn":21},{"ruleId":"711","severity":1,"message":"728","line":21,"column":23,"nodeType":"713","messageId":"714","endLine":21,"endColumn":35},{"ruleId":"732","severity":1,"message":"807","line":25,"column":8,"nodeType":"734","endLine":25,"endColumn":10,"suggestions":"808"},{"ruleId":"797","severity":1,"message":"798","line":11,"column":21,"nodeType":"783","endLine":11,"endColumn":45},{"ruleId":"797","severity":1,"message":"798","line":14,"column":21,"nodeType":"783","endLine":14,"endColumn":45},{"ruleId":"797","severity":1,"message":"798","line":17,"column":21,"nodeType":"783","endLine":17,"endColumn":45},{"ruleId":"749","severity":1,"message":"750","line":7,"column":13,"nodeType":"751","messageId":"752","endLine":7,"endColumn":15},{"ruleId":"711","severity":1,"message":"809","line":2,"column":10,"nodeType":"713","messageId":"714","endLine":2,"endColumn":19},{"ruleId":"732","severity":1,"message":"810","line":47,"column":7,"nodeType":"734","endLine":47,"endColumn":9,"suggestions":"811"},{"ruleId":"711","severity":1,"message":"812","line":26,"column":12,"nodeType":"713","messageId":"714","endLine":26,"endColumn":21},{"ruleId":"711","severity":1,"message":"813","line":26,"column":23,"nodeType":"713","messageId":"714","endLine":26,"endColumn":35},{"ruleId":"732","severity":1,"message":"814","line":30,"column":8,"nodeType":"734","endLine":30,"endColumn":10,"suggestions":"815"},{"ruleId":"711","severity":1,"message":"816","line":39,"column":12,"nodeType":"713","messageId":"714","endLine":39,"endColumn":20},{"ruleId":"817","severity":1,"message":"818","line":89,"column":33,"nodeType":"783","endLine":89,"endColumn":90},{"ruleId":"817","severity":1,"message":"819","line":94,"column":82,"nodeType":"783","endLine":94,"endColumn":137},{"ruleId":"749","severity":1,"message":"750","line":110,"column":37,"nodeType":"751","messageId":"752","endLine":110,"endColumn":39},{"ruleId":"711","severity":1,"message":"740","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":25},{"ruleId":"711","severity":1,"message":"784","line":2,"column":10,"nodeType":"713","messageId":"714","endLine":2,"endColumn":16},{"ruleId":"711","severity":1,"message":"785","line":2,"column":18,"nodeType":"713","messageId":"714","endLine":2,"endColumn":22},{"ruleId":"711","severity":1,"message":"786","line":2,"column":24,"nodeType":"713","messageId":"714","endLine":2,"endColumn":33},{"ruleId":"711","severity":1,"message":"743","line":2,"column":35,"nodeType":"713","messageId":"714","endLine":2,"endColumn":40},{"ruleId":"711","severity":1,"message":"744","line":2,"column":42,"nodeType":"713","messageId":"714","endLine":2,"endColumn":47},{"ruleId":"711","severity":1,"message":"741","line":2,"column":49,"nodeType":"713","messageId":"714","endLine":2,"endColumn":52},{"ruleId":"711","severity":1,"message":"742","line":2,"column":54,"nodeType":"713","messageId":"714","endLine":2,"endColumn":57},{"ruleId":"711","severity":1,"message":"720","line":2,"column":59,"nodeType":"713","messageId":"714","endLine":2,"endColumn":63},{"ruleId":"711","severity":1,"message":"721","line":2,"column":65,"nodeType":"713","messageId":"714","endLine":2,"endColumn":73},{"ruleId":"711","severity":1,"message":"787","line":2,"column":75,"nodeType":"713","messageId":"714","endLine":2,"endColumn":83},{"ruleId":"711","severity":1,"message":"788","line":2,"column":85,"nodeType":"713","messageId":"714","endLine":2,"endColumn":93},{"ruleId":"711","severity":1,"message":"722","line":3,"column":5,"nodeType":"713","messageId":"714","endLine":3,"endColumn":14},{"ruleId":"711","severity":1,"message":"789","line":3,"column":16,"nodeType":"713","messageId":"714","endLine":3,"endColumn":28},{"ruleId":"732","severity":1,"message":"820","line":26,"column":8,"nodeType":"734","endLine":26,"endColumn":10,"suggestions":"821"},{"ruleId":"711","severity":1,"message":"740","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":25},{"ruleId":"711","severity":1,"message":"784","line":2,"column":10,"nodeType":"713","messageId":"714","endLine":2,"endColumn":16},{"ruleId":"711","severity":1,"message":"785","line":2,"column":18,"nodeType":"713","messageId":"714","endLine":2,"endColumn":22},{"ruleId":"711","severity":1,"message":"786","line":2,"column":24,"nodeType":"713","messageId":"714","endLine":2,"endColumn":33},{"ruleId":"711","severity":1,"message":"743","line":2,"column":35,"nodeType":"713","messageId":"714","endLine":2,"endColumn":40},{"ruleId":"711","severity":1,"message":"744","line":2,"column":42,"nodeType":"713","messageId":"714","endLine":2,"endColumn":47},{"ruleId":"711","severity":1,"message":"741","line":2,"column":49,"nodeType":"713","messageId":"714","endLine":2,"endColumn":52},{"ruleId":"711","severity":1,"message":"742","line":2,"column":54,"nodeType":"713","messageId":"714","endLine":2,"endColumn":57},{"ruleId":"711","severity":1,"message":"720","line":2,"column":59,"nodeType":"713","messageId":"714","endLine":2,"endColumn":63},{"ruleId":"711","severity":1,"message":"721","line":2,"column":65,"nodeType":"713","messageId":"714","endLine":2,"endColumn":73},{"ruleId":"711","severity":1,"message":"787","line":2,"column":75,"nodeType":"713","messageId":"714","endLine":2,"endColumn":83},{"ruleId":"711","severity":1,"message":"788","line":2,"column":85,"nodeType":"713","messageId":"714","endLine":2,"endColumn":93},{"ruleId":"711","severity":1,"message":"722","line":3,"column":5,"nodeType":"713","messageId":"714","endLine":3,"endColumn":14},{"ruleId":"711","severity":1,"message":"789","line":3,"column":16,"nodeType":"713","messageId":"714","endLine":3,"endColumn":28},{"ruleId":"732","severity":1,"message":"822","line":27,"column":8,"nodeType":"734","endLine":27,"endColumn":10,"suggestions":"823"},{"ruleId":"749","severity":1,"message":"750","line":7,"column":13,"nodeType":"751","messageId":"752","endLine":7,"endColumn":15},{"ruleId":"749","severity":1,"message":"750","line":13,"column":18,"nodeType":"751","messageId":"752","endLine":13,"endColumn":20},{"ruleId":"749","severity":1,"message":"750","line":19,"column":18,"nodeType":"751","messageId":"752","endLine":19,"endColumn":20},{"ruleId":"749","severity":1,"message":"750","line":25,"column":18,"nodeType":"751","messageId":"752","endLine":25,"endColumn":20},{"ruleId":"711","severity":1,"message":"824","line":4,"column":27,"nodeType":"713","messageId":"714","endLine":4,"endColumn":47},{"ruleId":"711","severity":1,"message":"825","line":3,"column":10,"nodeType":"713","messageId":"714","endLine":3,"endColumn":24},{"ruleId":"711","severity":1,"message":"730","line":1,"column":8,"nodeType":"713","messageId":"714","endLine":1,"endColumn":13},{"ruleId":"749","severity":1,"message":"750","line":5,"column":18,"nodeType":"751","messageId":"752","endLine":5,"endColumn":20},{"ruleId":"749","severity":1,"message":"750","line":11,"column":23,"nodeType":"751","messageId":"752","endLine":11,"endColumn":25},{"ruleId":"749","severity":1,"message":"750","line":17,"column":23,"nodeType":"751","messageId":"752","endLine":17,"endColumn":25},{"ruleId":"711","severity":1,"message":"826","line":22,"column":12,"nodeType":"713","messageId":"714","endLine":22,"endColumn":24},{"ruleId":"749","severity":1,"message":"750","line":42,"column":34,"nodeType":"751","messageId":"752","endLine":42,"endColumn":36},{"ruleId":"711","severity":1,"message":"827","line":25,"column":11,"nodeType":"713","messageId":"714","endLine":25,"endColumn":21},{"ruleId":"749","severity":1,"message":"750","line":41,"column":38,"nodeType":"751","messageId":"752","endLine":41,"endColumn":40},{"ruleId":"716","severity":1,"message":"717","line":8,"column":1,"nodeType":"718","endLine":28,"endColumn":2},{"ruleId":"711","severity":1,"message":"719","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":26},{"ruleId":"711","severity":1,"message":"828","line":29,"column":10,"nodeType":"713","messageId":"714","endLine":29,"endColumn":24},{"ruleId":"711","severity":1,"message":"829","line":39,"column":10,"nodeType":"713","messageId":"714","endLine":39,"endColumn":28},{"ruleId":"711","severity":1,"message":"830","line":10,"column":21,"nodeType":"713","messageId":"714","endLine":10,"endColumn":37},{"ruleId":"711","severity":1,"message":"831","line":16,"column":12,"nodeType":"713","messageId":"714","endLine":16,"endColumn":18},{"ruleId":"711","severity":1,"message":"832","line":16,"column":20,"nodeType":"713","messageId":"714","endLine":16,"endColumn":29},{"ruleId":"711","severity":1,"message":"833","line":7,"column":10,"nodeType":"713","messageId":"714","endLine":7,"endColumn":21},{"ruleId":"711","severity":1,"message":"723","line":7,"column":23,"nodeType":"713","messageId":"714","endLine":7,"endColumn":34},{"ruleId":"711","severity":1,"message":"834","line":22,"column":8,"nodeType":"713","messageId":"714","endLine":22,"endColumn":25},{"ruleId":"716","severity":1,"message":"717","line":8,"column":1,"nodeType":"718","endLine":18,"endColumn":2},"no-native-reassign",["835"],"no-negated-in-lhs",["836"],"no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar","'Data' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useEffect' is defined but never used.","'Card' is defined but never used.","'CardText' is defined but never used.","'CardTitle' is defined but never used.","'useSelector' is defined but never used.","'sessionPopup' is defined but never used.","'CancelledPolicy' is defined but never used.","'dispatch' is assigned a value but never used.","'popUpData' is assigned a value but never used.","'setPopupData' is assigned a value but never used.","'added_session' is defined but never used.","'axios' is defined but never used.","'setAgora' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dipatchGetCards', 'dispatchCheckUser', and 'dispatchNotification'. Either include them or remove the dependency array.","ArrayExpression",["837"],"'cardRoute' is assigned a value but never used.","'heading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setHeading' and 'setLoginForm'. Either include them or remove the dependency array.",["838"],"'useState' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatchSignedupAction' and 'dispatchVerify'. Either include them or remove the dependency array.",["839"],"React Hook useEffect has missing dependencies: 'dispatchCategories' and 'dispatchSignUpProfile'. Either include them or remove the dependency array.",["840"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'dispatchSignupBank'. Either include it or remove the dependency array.",["841"],"'connect_bank' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatchClose'. Either include it or remove the dependency array.",["842"],"React Hook useEffect has a missing dependency: 'dispatchConnectBank'. Either include it or remove the dependency array.",["843"],"React Hook useEffect has a missing dependency: 'dispatchProfileFace'. Either include it or remove the dependency array.",["844"],"'form' is assigned a value but never used.","'setform' is assigned a value but never used.","'editForm' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatchCategories', 'dispatchEditSession', and 'dispatchNewSession'. Either include them or remove the dependency array.",["845"],"Expected '!==' and instead saw '!='.","'withRouter' is defined but never used.","'dp' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatchSessionPolicy'. Either include it or remove the dependency array.",["846"],"'formVal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatchSignupAction'. Either include it or remove the dependency array.",["847"],"'cancelled_session_modal' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatchSessionDetails'. Either include it or remove the dependency array.",["848"],"'bookings' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatchEarningDetail'. Either include it or remove the dependency array.",["849"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Button' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'CardBody' is defined but never used.","'CardLink' is defined but never used.","'CardSubtitle' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatchRatings'. Either include it or remove the dependency array.",["850"],"React Hook useEffect has a missing dependency: 'dispatchPayouts'. Either include it or remove the dependency array.",["851"],"React Hook useEffect has a missing dependency: 'dispatchContact'. Either include it or remove the dependency array.",["852"],["853"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'dispatchEarnings'. Either include it or remove the dependency array.",["854"],["855"],["856"],["857"],["858"],"'ModalHeader' is defined but never used.","'toggle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatchCancelPop'. Either include it or remove the dependency array.",["859"],"'signed_up' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatchCheckUser' and 'dispatchHead'. Either include them or remove the dependency array.",["860"],"'modalData' is assigned a value but never used.","'setModalData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setFormData'. Either include it or remove the dependency array.",["861"],"'datacall' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'dispatchSidebar'. Either include it or remove the dependency array.",["862"],"React Hook useEffect has a missing dependency: 'dispatchNotification'. Either include it or remove the dependency array.",["863"],"'session_past_details' is defined but never used.","'user_logged_in' is defined but never used.","'cancelAction' is assigned a value but never used.","'modalState' is assigned a value but never used.","'leaveEventHost' is defined but never used.","'leaveEventAudience' is defined but never used.","'upcoming_session' is defined but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'useDispatch' is defined but never used.","'start_session_img' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"864","fix":"865"},{"desc":"866","fix":"867"},{"desc":"868","fix":"869"},{"desc":"870","fix":"871"},{"desc":"872","fix":"873"},{"desc":"874","fix":"875"},{"desc":"876","fix":"877"},{"desc":"878","fix":"879"},{"desc":"880","fix":"881"},{"desc":"882","fix":"883"},{"desc":"884","fix":"885"},{"desc":"886","fix":"887"},{"desc":"888","fix":"889"},{"desc":"890","fix":"891"},{"desc":"892","fix":"893"},{"desc":"894","fix":"895"},{"desc":"894","fix":"896"},{"desc":"897","fix":"898"},{"desc":"894","fix":"899"},{"desc":"894","fix":"900"},{"desc":"894","fix":"901"},{"desc":"894","fix":"902"},{"desc":"903","fix":"904"},{"desc":"905","fix":"906"},{"desc":"907","fix":"908"},{"desc":"909","fix":"910"},{"desc":"911","fix":"912"},"Update the dependencies array to be: [dipatchGetCards, dispatchCheckUser, dispatchNotification]",{"range":"913","text":"914"},"Update the dependencies array to be: [setHeading, setLoginForm]",{"range":"915","text":"916"},"Update the dependencies array to be: [dispatchSignedupAction, dispatchVerify]",{"range":"917","text":"918"},"Update the dependencies array to be: [dispatchCategories, dispatchSignUpProfile]",{"range":"919","text":"920"},"Update the dependencies array to be: [dispatchSignupBank]",{"range":"921","text":"922"},"Update the dependencies array to be: [dispatchClose]",{"range":"923","text":"924"},"Update the dependencies array to be: [dispatchConnectBank]",{"range":"925","text":"926"},"Update the dependencies array to be: [dispatchProfileFace]",{"range":"927","text":"928"},"Update the dependencies array to be: [dispatchCategories, dispatchEditSession, dispatchNewSession]",{"range":"929","text":"930"},"Update the dependencies array to be: [dispatchSessionPolicy]",{"range":"931","text":"932"},"Update the dependencies array to be: [dispatchSignupAction]",{"range":"933","text":"934"},"Update the dependencies array to be: [dispatchSessionDetails]",{"range":"935","text":"936"},"Update the dependencies array to be: [dispatchEarningDetail]",{"range":"937","text":"938"},"Update the dependencies array to be: [dispatchRatings]",{"range":"939","text":"940"},"Update the dependencies array to be: [dispatchPayouts]",{"range":"941","text":"942"},"Update the dependencies array to be: [dispatchContact]",{"range":"943","text":"944"},{"range":"945","text":"944"},"Update the dependencies array to be: [dispatchEarnings]",{"range":"946","text":"947"},{"range":"948","text":"944"},{"range":"949","text":"944"},{"range":"950","text":"944"},{"range":"951","text":"944"},"Update the dependencies array to be: [dispatchCancelPop]",{"range":"952","text":"953"},"Update the dependencies array to be: [dispatchCheckUser, dispatchHead]",{"range":"954","text":"955"},"Update the dependencies array to be: [setFormData]",{"range":"956","text":"957"},"Update the dependencies array to be: [dispatchSidebar]",{"range":"958","text":"959"},"Update the dependencies array to be: [dispatchNotification]",{"range":"960","text":"961"},[1817,1819],"[dipatchGetCards, dispatchCheckUser, dispatchNotification]",[447,449],"[setHeading, setLoginForm]",[912,914],"[dispatchSignedupAction, dispatchVerify]",[767,769],"[dispatchCategories, dispatchSignUpProfile]",[635,637],"[dispatchSignupBank]",[784,786],"[dispatchClose]",[791,793],"[dispatchConnectBank]",[718,720],"[dispatchProfileFace]",[1581,1583],"[dispatchCategories, dispatchEditSession, dispatchNewSession]",[712,714],"[dispatchSessionPolicy]",[795,797],"[dispatchSignupAction]",[1039,1041],"[dispatchSessionDetails]",[904,906],"[dispatchEarningDetail]",[802,804],"[dispatchRatings]",[675,677],"[dispatchPayouts]",[700,702],"[dispatchContact]",[696,698],[675,677],"[dispatchEarnings]",[696,698],[701,703],[798,800],[811,813],[710,712],"[dispatchCancelPop]",[1381,1383],"[dispatchCheckUser, dispatchHead]",[800,802],"[setFormData]",[675,677],"[dispatchSidebar]",[747,749],"[dispatchNotification]"]