[{"D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\index.js":"1","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\App.js":"2","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\reportWebVitals.js":"3","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\components\\Main.jsx":"4","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\components\\Login\\LoginForm.jsx":"5","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\components\\Login\\ModalPopup.jsx":"6","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\reducer\\index.js":"7","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\reducer\\getDataReducer.js":"8","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\actions\\fetchLocalData.js":"9","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\reducer\\updateModal.js":"10","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\actions\\updateModal.js":"11","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\components\\Login\\Login.jsx":"12","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\components\\Router\\Router.jsx":"13"},{"size":650,"mtime":1610826808809,"results":"14","hashOfConfig":"15"},{"size":601,"mtime":1610926720482,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1610094808821,"results":"17","hashOfConfig":"15"},{"size":1253,"mtime":1610926339351,"results":"18","hashOfConfig":"15"},{"size":2885,"mtime":1610924521448,"results":"19","hashOfConfig":"15"},{"size":2248,"mtime":1610925988086,"results":"20","hashOfConfig":"15"},{"size":249,"mtime":1610909109644,"results":"21","hashOfConfig":"15"},{"size":329,"mtime":1610830648724,"results":"22","hashOfConfig":"15"},{"size":297,"mtime":1610837627484,"results":"23","hashOfConfig":"15"},{"size":774,"mtime":1610925903089,"results":"24","hashOfConfig":"15"},{"size":580,"mtime":1610925785790,"results":"25","hashOfConfig":"15"},{"size":1249,"mtime":1610926410651,"results":"26","hashOfConfig":"15"},{"size":410,"mtime":1610926644224,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"sgsbne",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\index.js",[],["61","62"],"D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\App.js",["63"],"D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\reportWebVitals.js",[],"D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\components\\Main.jsx",["64"],"D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\components\\Login\\LoginForm.jsx",["65","66","67","68","69"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport ModalPopup from './ModalPopup';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { updateModal } from '../../actions/updateModal';\r\n\r\n// Style\r\nimport '../../styles/login.scss';\r\n\r\nfunction LoginForm(props) {\r\n\r\n    const [loginForm, setForm] = useState({});\r\n    const [modalData, setModalData] = useState({});\r\n\r\n    useEffect(() => {\r\n        setFormData();\r\n    }, []);\r\n\r\n    const setFormData = () => {\r\n        setForm(props.formData);\r\n    }\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const toggle = ()=>{\r\n        //setModal(!modal);\r\n        dispatch(updateModal('forgot'));\r\n    } \r\n\r\n    const modalState = useSelector(state => state.updateModal);\r\n    \r\n    \r\n    const getFormData = () => {\r\n        if (Object.keys(loginForm).length > 0) {\r\n            return (\r\n                <div className=\"login-form\">\r\n                    <h2 className=\"login-form-heading\">\r\n                        {loginForm.welcomeText}\r\n                    </h2>\r\n                    <p className=\"login-form-note\">\r\n                        {loginForm.loginNote}\r\n                    </p>\r\n                    <Form >\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\">{loginForm.email}</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"dodgeui2020@gmail.com\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"examplePassword\">{loginForm.password}</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"***************\" />\r\n                        </FormGroup>\r\n                        <FormGroup check inline>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" /> {loginForm.remember}\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check inline style={{ textAlign: \"right\" }}>\r\n                            <Label check>\r\n                                <a href=\"#\" onClick={toggle}>{loginForm.forgot}</a>\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Button color=\"info\" size=\"lg\" >{loginForm.loginBtn}</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <ModalPopup isOpen={modal} loginData={modalState}/>                 \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {getFormData()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\components\\Login\\ModalPopup.jsx",["70"],"import React from 'react';\r\nimport { Form, FormGroup, Label, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { updateModal } from '../../actions/updateModal';\r\n\r\n// Style\r\nimport '../../styles/login.scss';\r\n\r\n\r\nfunction ModalPopup(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const updateData = () => {\r\n        dispatch(updateModal('reset'));\r\n    }\r\n\r\n    const modalState = useSelector(state => state.updateModal);\r\n\r\n    const closeModal=()=> {\r\n        dispatch(updateModal('close'));\r\n    }\r\n\r\n    const getModal = () => {\r\n        if (Object.keys(props.loginData).length > 0) {\r\n            let data = props.loginData.modalState;\r\n            return (\r\n                <Modal isOpen={props.loginData.popUp} >\r\n                    <ModalHeader >{data.heading}</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            {data.hasOwnProperty('text') ?\r\n                                <FormGroup>\r\n                                    <p>\r\n                                        {data.text}\r\n                                    </p>\r\n                                </FormGroup>\r\n                                :\r\n                                <FormGroup>\r\n                                    <Label for=\"exampleEmail\">{data.email}</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"dodgeui2020@gmail.com\" />\r\n                                </FormGroup>\r\n                            }\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        {data.hasOwnProperty('text') ?\r\n                            <Button color=\"secondary\" onClick={() => closeModal()}>Ok</Button>\r\n                            :\r\n                            <Button color=\"secondary\" onClick={() => updateData()}>Send</Button>\r\n                        }\r\n                    </ModalFooter>\r\n                </Modal>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {getModal()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalPopup;","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\reducer\\index.js",[],"D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\reducer\\getDataReducer.js",["71"],"const initialState = {\r\n    dataState: {}\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case 'fetchLocalData':\r\n            return {\r\n                ...state,\r\n                dataState: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\actions\\fetchLocalData.js",["72"],"import axios from 'axios';\r\nimport localData from '../Data/Data.json';\r\n\r\nexport const getLocal = () => {\r\n    return (dispatch) => {\r\n        if (localData) {\r\n            dispatch({\r\n                type: 'fetchLocalData',\r\n                payload: localData\r\n            })\r\n        }\r\n    }\r\n}","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\reducer\\updateModal.js",["73"],"const initialState = {\r\n    modalState: {\r\n        popUp: false\r\n    }\r\n}\r\n\r\nexport default function(state=initialState, actions) {\r\n    switch(actions.type) {\r\n        case 'forgotPassword':\r\n            return {\r\n                ...state.modalState,\r\n                popUp: !state.modalState.popUp,\r\n                modalState: actions.payload\r\n            }\r\n        case 'resetPassword':\r\n            return {\r\n                //popUp: !state.modalState.popUp,\r\n                modalState: actions.payload,\r\n                popUp: !state.modalState.popUp\r\n            } \r\n        case 'closeModal':\r\n            return {\r\n                popUp: false,\r\n                modalState: actions.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\actions\\updateModal.js",["74","75","76","77"],"import axios from 'axios';\r\nimport localData from '../Data/Data.json';\r\n\r\nexport const updateModal = (typeModal) => {\r\n    if(typeModal == 'forgot') {\r\n        return {\r\n            type: 'forgotPassword',\r\n            payload: localData.forgotPassword\r\n        }\r\n    }\r\n    else if(typeModal == 'reset') {\r\n        return {\r\n            type: 'resetPassword',\r\n            payload: localData.resetPassword\r\n        }\r\n    }\r\n    else if(typeModal == 'close') {\r\n        return {\r\n            type: 'closeModal',\r\n            payload: localData.resetPassword\r\n        }\r\n    }\r\n}","D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\components\\Login\\Login.jsx",["78"],"D:\\D\\FL-PROJECTS\\Tunnins\\tunnin-web-app\\tunnins-web-app\\src\\components\\Router\\Router.jsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":12},{"ruleId":"83","severity":1,"message":"87","line":14,"column":8,"nodeType":"85","messageId":"86","endLine":14,"endColumn":12},{"ruleId":"83","severity":1,"message":"88","line":18,"column":12,"nodeType":"85","messageId":"86","endLine":18,"endColumn":21},{"ruleId":"83","severity":1,"message":"89","line":18,"column":23,"nodeType":"85","messageId":"86","endLine":18,"endColumn":35},{"ruleId":"90","severity":1,"message":"91","line":22,"column":8,"nodeType":"92","endLine":22,"endColumn":10,"suggestions":"93"},{"ruleId":"83","severity":1,"message":"94","line":28,"column":19,"nodeType":"85","messageId":"86","endLine":28,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":66,"column":33,"nodeType":"97","endLine":66,"endColumn":62},{"ruleId":"83","severity":1,"message":"98","line":22,"column":11,"nodeType":"85","messageId":"86","endLine":22,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":5,"column":1,"nodeType":"101","endLine":15,"endColumn":2},{"ruleId":"83","severity":1,"message":"102","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":13},{"ruleId":"99","severity":1,"message":"100","line":7,"column":1,"nodeType":"101","endLine":29,"endColumn":2},{"ruleId":"83","severity":1,"message":"102","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":13},{"ruleId":"103","severity":1,"message":"104","line":5,"column":18,"nodeType":"105","messageId":"106","endLine":5,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":11,"column":23,"nodeType":"105","messageId":"106","endLine":11,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":17,"column":23,"nodeType":"105","messageId":"106","endLine":17,"endColumn":25},{"ruleId":"90","severity":1,"message":"107","line":17,"column":8,"nodeType":"92","endLine":17,"endColumn":10,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar","'Data' is defined but never used.","'modalData' is assigned a value but never used.","'setModalData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setFormData'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'setModal' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'modalState' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'setHeading' and 'setLoginForm'. Either include them or remove the dependency array.",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [setFormData]",{"range":"117","text":"118"},"Update the dependencies array to be: [setHeading, setLoginForm]",{"range":"119","text":"120"},[541,543],"[setFormData]",[399,401],"[setHeading, setLoginForm]"]